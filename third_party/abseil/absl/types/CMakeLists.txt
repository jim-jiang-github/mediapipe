#
# Copyright 2017 The Abseil Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
absl_cc_library(
  NAME
    any
  HDRS
    "any.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::bad_any_cast
    abslx::config
    abslx::core_headers
    abslx::fast_type_id
    abslx::type_traits
    abslx::utility
  PUBLIC
)

absl_cc_library(
  NAME
    bad_any_cast
  HDRS
   "bad_any_cast.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::bad_any_cast_impl
    abslx::config
  PUBLIC
)

absl_cc_library(
  NAME
    bad_any_cast_impl
  SRCS
   "bad_any_cast.h"
   "bad_any_cast.cc"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::config
    abslx::raw_logging_internal
)

absl_cc_test(
  NAME
    any_test
  SRCS
    "any_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::any
    abslx::config
    abslx::exception_testing
    abslx::raw_logging_internal
    abslx::test_instance_tracker
    gmock_main
)

absl_cc_test(
  NAME
    any_test_noexceptions
  SRCS
    "any_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::any
    abslx::config
    abslx::exception_testing
    abslx::raw_logging_internal
    abslx::test_instance_tracker
    gmock_main
)

absl_cc_test(
  NAME
    any_exception_safety_test
  SRCS
    "any_exception_safety_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::any
    abslx::config
    abslx::exception_safety_testing
    gmock_main
)

absl_cc_library(
  NAME
    span
  HDRS
    "span.h"
  SRCS
    "internal/span.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::algorithm
    abslx::core_headers
    abslx::throw_delegate
    abslx::type_traits
  PUBLIC
)

absl_cc_test(
  NAME
    span_test
  SRCS
    "span_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::span
    abslx::base
    abslx::config
    abslx::core_headers
    abslx::exception_testing
    abslx::fixed_array
    abslx::inlined_vector
    abslx::hash_testing
    abslx::strings
    gmock_main
)

absl_cc_test(
  NAME
    span_test_noexceptions
  SRCS
    "span_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::span
    abslx::base
    abslx::config
    abslx::core_headers
    abslx::exception_testing
    abslx::fixed_array
    abslx::inlined_vector
    abslx::hash_testing
    abslx::strings
    gmock_main
)

absl_cc_library(
  NAME
    optional
  HDRS
    "optional.h"
  SRCS
    "internal/optional.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::bad_optional_access
    abslx::base_internal
    abslx::config
    abslx::core_headers
    abslx::memory
    abslx::type_traits
    abslx::utility
  PUBLIC
)

absl_cc_library(
  NAME
    bad_optional_access
  HDRS
    "bad_optional_access.h"
  SRCS
    "bad_optional_access.cc"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::config
    abslx::raw_logging_internal
  PUBLIC
)

absl_cc_library(
  NAME
    bad_variant_access
  HDRS
    "bad_variant_access.h"
  SRCS
    "bad_variant_access.cc"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::config
    abslx::raw_logging_internal
  PUBLIC
)

absl_cc_test(
  NAME
    optional_test
  SRCS
    "optional_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::optional
    abslx::config
    abslx::raw_logging_internal
    abslx::strings
    abslx::type_traits
    gmock_main
)

absl_cc_test(
  NAME
    optional_exception_safety_test
  SRCS
    "optional_exception_safety_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::optional
    abslx::config
    abslx::exception_safety_testing
    gmock_main
)

absl_cc_library(
  NAME
    conformance_testing
  HDRS
    "internal/conformance_aliases.h"
    "internal/conformance_archetype.h"
    "internal/conformance_profile.h"
    "internal/conformance_testing.h"
    "internal/conformance_testing_helpers.h"
    "internal/parentheses.h"
    "internal/transform_args.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::algorithm
    abslx::debugging
    abslx::type_traits
    abslx::strings
    abslx::utility
    gmock_main
  TESTONLY
)

absl_cc_test(
  NAME
    conformance_testing_test
  SRCS
    "internal/conformance_testing_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
    ${ABSL_EXCEPTIONS_FLAG}
  LINKOPTS
    ${ABSL_EXCEPTIONS_FLAG_LINKOPTS}
  DEPS
    abslx::conformance_testing
    abslx::type_traits
    gmock_main
)

absl_cc_test(
  NAME
    conformance_testing_test_no_exceptions
  SRCS
    "internal/conformance_testing_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::conformance_testing
    abslx::type_traits
    gmock_main
)

absl_cc_library(
  NAME
    variant
  HDRS
    "variant.h"
  SRCS
    "internal/variant.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::bad_variant_access
    abslx::base_internal
    abslx::config
    abslx::core_headers
    abslx::type_traits
    abslx::utility
  PUBLIC
)

absl_cc_test(
  NAME
    variant_test
  SRCS
    "variant_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::variant
    abslx::config
    abslx::core_headers
    abslx::memory
    abslx::type_traits
    abslx::strings
    gmock_main
)

absl_cc_library(
  NAME
    compare
  HDRS
    "compare.h"
  COPTS
    ${ABSL_DEFAULT_COPTS}
  DEPS
    abslx::core_headers
    abslx::type_traits
  PUBLIC
)

absl_cc_test(
  NAME
    compare_test
  SRCS
    "compare_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::base
    abslx::compare
    gmock_main
)

absl_cc_test(
  NAME
    variant_exception_safety_test
  SRCS
    "variant_exception_safety_test.cc"
  COPTS
    ${ABSL_TEST_COPTS}
  DEPS
    abslx::variant
    abslx::config
    abslx::exception_safety_testing
    abslx::memory
    gmock_main
)
