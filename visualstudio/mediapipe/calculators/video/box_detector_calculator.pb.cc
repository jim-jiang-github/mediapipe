// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/calculators/video/box_detector_calculator.proto

#include "mediapipe/calculators/video/box_detector_calculator.pb.h"

#include <algorithm>

#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/extension_set.h>
#include <x/google/protobuf/wire_format_lite.h>
#include <x/google/protobuf/descriptor.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/reflection_ops.h>
#include <x/google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mediapipe {
constexpr BoxDetectorCalculatorOptions::BoxDetectorCalculatorOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : index_proto_filename_()
  , detector_options_(nullptr){}
struct BoxDetectorCalculatorOptionsDefaultTypeInternal {
  constexpr BoxDetectorCalculatorOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BoxDetectorCalculatorOptionsDefaultTypeInternal() {}
  union {
    BoxDetectorCalculatorOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BoxDetectorCalculatorOptionsDefaultTypeInternal _BoxDetectorCalculatorOptions_default_instance_;
}  // namespace mediapipe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxDetectorCalculatorOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxDetectorCalculatorOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxDetectorCalculatorOptions, detector_options_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxDetectorCalculatorOptions, index_proto_filename_),
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::mediapipe::BoxDetectorCalculatorOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_BoxDetectorCalculatorOptions_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n9mediapipe/calculators/video/box_detect"
  "or_calculator.proto\022\tmediapipe\032$mediapip"
  "e/framework/calculator.proto\032*mediapipe/"
  "util/tracking/box_detector.proto\"\315\001\n\034Box"
  "DetectorCalculatorOptions\0227\n\020detector_op"
  "tions\030\001 \001(\0132\035.mediapipe.BoxDetectorOptio"
  "ns\022\034\n\024index_proto_filename\030\002 \003(\t2V\n\003ext\022"
  "\034.mediapipe.CalculatorOptions\030\342\334\224\212\001 \001(\0132"
  "\'.mediapipe.BoxDetectorCalculatorOptions"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_deps[2] = {
  &::descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
  &::descriptor_table_mediapipe_2futil_2ftracking_2fbox_5fdetector_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto = {
  false, false, 360, descriptor_table_protodef_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto, "mediapipe/calculators/video/box_detector_calculator.proto", 
  &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_once, descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto::offsets,
  file_level_metadata_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto, file_level_enum_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto, file_level_service_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_getter() {
  return &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto(&descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto);
namespace mediapipe {

// ===================================================================

class BoxDetectorCalculatorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<BoxDetectorCalculatorOptions>()._has_bits_);
  static const ::mediapipe::BoxDetectorOptions& detector_options(const BoxDetectorCalculatorOptions* msg);
  static void set_has_detector_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::mediapipe::BoxDetectorOptions&
BoxDetectorCalculatorOptions::_Internal::detector_options(const BoxDetectorCalculatorOptions* msg) {
  return *msg->detector_options_;
}
void BoxDetectorCalculatorOptions::clear_detector_options() {
  if (detector_options_ != nullptr) detector_options_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
BoxDetectorCalculatorOptions::BoxDetectorCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  index_proto_filename_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.BoxDetectorCalculatorOptions)
}
BoxDetectorCalculatorOptions::BoxDetectorCalculatorOptions(const BoxDetectorCalculatorOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      index_proto_filename_(from.index_proto_filename_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_detector_options()) {
    detector_options_ = new ::mediapipe::BoxDetectorOptions(*from.detector_options_);
  } else {
    detector_options_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:mediapipe.BoxDetectorCalculatorOptions)
}

void BoxDetectorCalculatorOptions::SharedCtor() {
detector_options_ = nullptr;
}

BoxDetectorCalculatorOptions::~BoxDetectorCalculatorOptions() {
  // @@protoc_insertion_point(destructor:mediapipe.BoxDetectorCalculatorOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BoxDetectorCalculatorOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete detector_options_;
}

void BoxDetectorCalculatorOptions::ArenaDtor(void* object) {
  BoxDetectorCalculatorOptions* _this = reinterpret_cast< BoxDetectorCalculatorOptions* >(object);
  (void)_this;
}
void BoxDetectorCalculatorOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BoxDetectorCalculatorOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BoxDetectorCalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.BoxDetectorCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_proto_filename_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(detector_options_ != nullptr);
    detector_options_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BoxDetectorCalculatorOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .mediapipe.BoxDetectorOptions detector_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_detector_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string index_proto_filename = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_index_proto_filename();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "mediapipe.BoxDetectorCalculatorOptions.index_proto_filename");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BoxDetectorCalculatorOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.BoxDetectorCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mediapipe.BoxDetectorOptions detector_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::detector_options(this), target, stream);
  }

  // repeated string index_proto_filename = 2;
  for (int i = 0, n = this->_internal_index_proto_filename_size(); i < n; i++) {
    const auto& s = this->_internal_index_proto_filename(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "mediapipe.BoxDetectorCalculatorOptions.index_proto_filename");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.BoxDetectorCalculatorOptions)
  return target;
}

size_t BoxDetectorCalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.BoxDetectorCalculatorOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string index_proto_filename = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(index_proto_filename_.size());
  for (int i = 0, n = index_proto_filename_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      index_proto_filename_.Get(i));
  }

  // optional .mediapipe.BoxDetectorOptions detector_options = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *detector_options_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoxDetectorCalculatorOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.BoxDetectorCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const BoxDetectorCalculatorOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BoxDetectorCalculatorOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.BoxDetectorCalculatorOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.BoxDetectorCalculatorOptions)
    MergeFrom(*source);
  }
}

void BoxDetectorCalculatorOptions::MergeFrom(const BoxDetectorCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.BoxDetectorCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  index_proto_filename_.MergeFrom(from.index_proto_filename_);
  if (from._internal_has_detector_options()) {
    _internal_mutable_detector_options()->::mediapipe::BoxDetectorOptions::MergeFrom(from._internal_detector_options());
  }
}

void BoxDetectorCalculatorOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.BoxDetectorCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxDetectorCalculatorOptions::CopyFrom(const BoxDetectorCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.BoxDetectorCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxDetectorCalculatorOptions::IsInitialized() const {
  return true;
}

void BoxDetectorCalculatorOptions::InternalSwap(BoxDetectorCalculatorOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  index_proto_filename_.InternalSwap(&other->index_proto_filename_);
  swap(detector_options_, other->detector_options_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BoxDetectorCalculatorOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_getter, &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto_once,
      file_level_metadata_mediapipe_2fcalculators_2fvideo_2fbox_5fdetector_5fcalculator_2eproto[0]);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoxDetectorCalculatorOptions::kExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::BoxDetectorCalculatorOptions >, 11, false >
  BoxDetectorCalculatorOptions::ext(kExtFieldNumber, ::mediapipe::BoxDetectorCalculatorOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::BoxDetectorCalculatorOptions* Arena::CreateMaybeMessage< ::mediapipe::BoxDetectorCalculatorOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::BoxDetectorCalculatorOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <x/google/protobuf/port_undef.inc>
