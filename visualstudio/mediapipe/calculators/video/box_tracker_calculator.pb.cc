// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/calculators/video/box_tracker_calculator.proto

#include "mediapipe/calculators/video/box_tracker_calculator.pb.h"

#include <algorithm>

#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/extension_set.h>
#include <x/google/protobuf/wire_format_lite.h>
#include <x/google/protobuf/descriptor.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/reflection_ops.h>
#include <x/google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mediapipe {
constexpr BoxTrackerCalculatorOptions::BoxTrackerCalculatorOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : tracker_options_(nullptr)
  , initial_position_(nullptr)
  , visualize_tracking_data_(false)
  , visualize_state_(false)
  , visualize_internal_state_(false)
  , streaming_track_data_cache_size_(0)
  , start_pos_transition_frames_(0){}
struct BoxTrackerCalculatorOptionsDefaultTypeInternal {
  constexpr BoxTrackerCalculatorOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BoxTrackerCalculatorOptionsDefaultTypeInternal() {}
  union {
    BoxTrackerCalculatorOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BoxTrackerCalculatorOptionsDefaultTypeInternal _BoxTrackerCalculatorOptions_default_instance_;
}  // namespace mediapipe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, tracker_options_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, initial_position_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, visualize_tracking_data_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, visualize_state_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, visualize_internal_state_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, streaming_track_data_cache_size_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::BoxTrackerCalculatorOptions, start_pos_transition_frames_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 12, sizeof(::mediapipe::BoxTrackerCalculatorOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_BoxTrackerCalculatorOptions_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n8mediapipe/calculators/video/box_tracke"
  "r_calculator.proto\022\tmediapipe\032$mediapipe"
  "/framework/calculator.proto\032)mediapipe/u"
  "til/tracking/box_tracker.proto\"\250\003\n\033BoxTr"
  "ackerCalculatorOptions\0225\n\017tracker_option"
  "s\030\001 \001(\0132\034.mediapipe.BoxTrackerOptions\0226\n"
  "\020initial_position\030\002 \001(\0132\034.mediapipe.Time"
  "dBoxProtoList\022&\n\027visualize_tracking_data"
  "\030\003 \001(\010:\005false\022\036\n\017visualize_state\030\004 \001(\010:\005"
  "false\022\'\n\030visualize_internal_state\030\005 \001(\010:"
  "\005false\022*\n\037streaming_track_data_cache_siz"
  "e\030\006 \001(\005:\0010\022&\n\033start_pos_transition_frame"
  "s\030\007 \001(\005:\00102U\n\003ext\022\034.mediapipe.Calculator"
  "Options\030\364\244\224\200\001 \001(\0132&.mediapipe.BoxTracker"
  "CalculatorOptions"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_deps[2] = {
  &::descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
  &::descriptor_table_mediapipe_2futil_2ftracking_2fbox_5ftracker_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto = {
  false, false, 577, descriptor_table_protodef_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto, "mediapipe/calculators/video/box_tracker_calculator.proto", 
  &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_once, descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto::offsets,
  file_level_metadata_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto, file_level_enum_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto, file_level_service_descriptors_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_getter() {
  return &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto(&descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto);
namespace mediapipe {

// ===================================================================

class BoxTrackerCalculatorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<BoxTrackerCalculatorOptions>()._has_bits_);
  static const ::mediapipe::BoxTrackerOptions& tracker_options(const BoxTrackerCalculatorOptions* msg);
  static void set_has_tracker_options(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mediapipe::TimedBoxProtoList& initial_position(const BoxTrackerCalculatorOptions* msg);
  static void set_has_initial_position(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_visualize_tracking_data(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_visualize_state(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_visualize_internal_state(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_streaming_track_data_cache_size(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_start_pos_transition_frames(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

const ::mediapipe::BoxTrackerOptions&
BoxTrackerCalculatorOptions::_Internal::tracker_options(const BoxTrackerCalculatorOptions* msg) {
  return *msg->tracker_options_;
}
const ::mediapipe::TimedBoxProtoList&
BoxTrackerCalculatorOptions::_Internal::initial_position(const BoxTrackerCalculatorOptions* msg) {
  return *msg->initial_position_;
}
void BoxTrackerCalculatorOptions::clear_tracker_options() {
  if (tracker_options_ != nullptr) tracker_options_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void BoxTrackerCalculatorOptions::clear_initial_position() {
  if (initial_position_ != nullptr) initial_position_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
BoxTrackerCalculatorOptions::BoxTrackerCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.BoxTrackerCalculatorOptions)
}
BoxTrackerCalculatorOptions::BoxTrackerCalculatorOptions(const BoxTrackerCalculatorOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tracker_options()) {
    tracker_options_ = new ::mediapipe::BoxTrackerOptions(*from.tracker_options_);
  } else {
    tracker_options_ = nullptr;
  }
  if (from._internal_has_initial_position()) {
    initial_position_ = new ::mediapipe::TimedBoxProtoList(*from.initial_position_);
  } else {
    initial_position_ = nullptr;
  }
  ::memcpy(&visualize_tracking_data_, &from.visualize_tracking_data_,
    static_cast<size_t>(reinterpret_cast<char*>(&start_pos_transition_frames_) -
    reinterpret_cast<char*>(&visualize_tracking_data_)) + sizeof(start_pos_transition_frames_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.BoxTrackerCalculatorOptions)
}

void BoxTrackerCalculatorOptions::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&tracker_options_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&start_pos_transition_frames_) -
    reinterpret_cast<char*>(&tracker_options_)) + sizeof(start_pos_transition_frames_));
}

BoxTrackerCalculatorOptions::~BoxTrackerCalculatorOptions() {
  // @@protoc_insertion_point(destructor:mediapipe.BoxTrackerCalculatorOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void BoxTrackerCalculatorOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tracker_options_;
  if (this != internal_default_instance()) delete initial_position_;
}

void BoxTrackerCalculatorOptions::ArenaDtor(void* object) {
  BoxTrackerCalculatorOptions* _this = reinterpret_cast< BoxTrackerCalculatorOptions* >(object);
  (void)_this;
}
void BoxTrackerCalculatorOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BoxTrackerCalculatorOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BoxTrackerCalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.BoxTrackerCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(tracker_options_ != nullptr);
      tracker_options_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(initial_position_ != nullptr);
      initial_position_->Clear();
    }
  }
  if (cached_has_bits & 0x0000007cu) {
    ::memset(&visualize_tracking_data_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&start_pos_transition_frames_) -
        reinterpret_cast<char*>(&visualize_tracking_data_)) + sizeof(start_pos_transition_frames_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BoxTrackerCalculatorOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional .mediapipe.BoxTrackerOptions tracker_options = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tracker_options(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.TimedBoxProtoList initial_position = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_initial_position(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visualize_tracking_data = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_visualize_tracking_data(&has_bits);
          visualize_tracking_data_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visualize_state = 4 [default = false];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_visualize_state(&has_bits);
          visualize_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool visualize_internal_state = 5 [default = false];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_visualize_internal_state(&has_bits);
          visualize_internal_state_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 streaming_track_data_cache_size = 6 [default = 0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_streaming_track_data_cache_size(&has_bits);
          streaming_track_data_cache_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 start_pos_transition_frames = 7 [default = 0];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_start_pos_transition_frames(&has_bits);
          start_pos_transition_frames_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BoxTrackerCalculatorOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.BoxTrackerCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .mediapipe.BoxTrackerOptions tracker_options = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tracker_options(this), target, stream);
  }

  // optional .mediapipe.TimedBoxProtoList initial_position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::initial_position(this), target, stream);
  }

  // optional bool visualize_tracking_data = 3 [default = false];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_visualize_tracking_data(), target);
  }

  // optional bool visualize_state = 4 [default = false];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_visualize_state(), target);
  }

  // optional bool visualize_internal_state = 5 [default = false];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_visualize_internal_state(), target);
  }

  // optional int32 streaming_track_data_cache_size = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_streaming_track_data_cache_size(), target);
  }

  // optional int32 start_pos_transition_frames = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_start_pos_transition_frames(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.BoxTrackerCalculatorOptions)
  return target;
}

size_t BoxTrackerCalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.BoxTrackerCalculatorOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional .mediapipe.BoxTrackerOptions tracker_options = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *tracker_options_);
    }

    // optional .mediapipe.TimedBoxProtoList initial_position = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *initial_position_);
    }

    // optional bool visualize_tracking_data = 3 [default = false];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional bool visualize_state = 4 [default = false];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 1;
    }

    // optional bool visualize_internal_state = 5 [default = false];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 1;
    }

    // optional int32 streaming_track_data_cache_size = 6 [default = 0];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_streaming_track_data_cache_size());
    }

    // optional int32 start_pos_transition_frames = 7 [default = 0];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_start_pos_transition_frames());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoxTrackerCalculatorOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.BoxTrackerCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const BoxTrackerCalculatorOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BoxTrackerCalculatorOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.BoxTrackerCalculatorOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.BoxTrackerCalculatorOptions)
    MergeFrom(*source);
  }
}

void BoxTrackerCalculatorOptions::MergeFrom(const BoxTrackerCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.BoxTrackerCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_tracker_options()->::mediapipe::BoxTrackerOptions::MergeFrom(from._internal_tracker_options());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_initial_position()->::mediapipe::TimedBoxProtoList::MergeFrom(from._internal_initial_position());
    }
    if (cached_has_bits & 0x00000004u) {
      visualize_tracking_data_ = from.visualize_tracking_data_;
    }
    if (cached_has_bits & 0x00000008u) {
      visualize_state_ = from.visualize_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      visualize_internal_state_ = from.visualize_internal_state_;
    }
    if (cached_has_bits & 0x00000020u) {
      streaming_track_data_cache_size_ = from.streaming_track_data_cache_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      start_pos_transition_frames_ = from.start_pos_transition_frames_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BoxTrackerCalculatorOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.BoxTrackerCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoxTrackerCalculatorOptions::CopyFrom(const BoxTrackerCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.BoxTrackerCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoxTrackerCalculatorOptions::IsInitialized() const {
  return true;
}

void BoxTrackerCalculatorOptions::InternalSwap(BoxTrackerCalculatorOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BoxTrackerCalculatorOptions, start_pos_transition_frames_)
      + sizeof(BoxTrackerCalculatorOptions::start_pos_transition_frames_)
      - PROTOBUF_FIELD_OFFSET(BoxTrackerCalculatorOptions, tracker_options_)>(
          reinterpret_cast<char*>(&tracker_options_),
          reinterpret_cast<char*>(&other->tracker_options_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BoxTrackerCalculatorOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_getter, &descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto_once,
      file_level_metadata_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto[0]);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoxTrackerCalculatorOptions::kExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::BoxTrackerCalculatorOptions >, 11, false >
  BoxTrackerCalculatorOptions::ext(kExtFieldNumber, ::mediapipe::BoxTrackerCalculatorOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::BoxTrackerCalculatorOptions* Arena::CreateMaybeMessage< ::mediapipe::BoxTrackerCalculatorOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::BoxTrackerCalculatorOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <x/google/protobuf/port_undef.inc>
