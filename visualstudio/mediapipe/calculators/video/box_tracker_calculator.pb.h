// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/calculators/video/box_tracker_calculator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto

#include <limits>
#include <string>

#include <x/google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <x/google/protobuf/port_undef.inc>
#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/arena.h>
#include <x/google/protobuf/arenastring.h>
#include <x/google/protobuf/generated_message_table_driven.h>
#include <x/google/protobuf/generated_message_util.h>
#include <x/google/protobuf/metadata_lite.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/message.h>
#include <x/google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <x/google/protobuf/extension_set.h>  // IWYU pragma: export
#include <x/google/protobuf/unknown_field_set.h>
#include "mediapipe/framework/calculator.pb.h"
#include "mediapipe/util/tracking/box_tracker.pb.h"
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto;
namespace mediapipe {
class BoxTrackerCalculatorOptions;
struct BoxTrackerCalculatorOptionsDefaultTypeInternal;
extern BoxTrackerCalculatorOptionsDefaultTypeInternal _BoxTrackerCalculatorOptions_default_instance_;
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> ::mediapipe::BoxTrackerCalculatorOptions* Arena::CreateMaybeMessage<::mediapipe::BoxTrackerCalculatorOptions>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mediapipe {

// ===================================================================

class BoxTrackerCalculatorOptions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.BoxTrackerCalculatorOptions) */ {
 public:
  inline BoxTrackerCalculatorOptions() : BoxTrackerCalculatorOptions(nullptr) {}
  ~BoxTrackerCalculatorOptions() override;
  explicit constexpr BoxTrackerCalculatorOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  BoxTrackerCalculatorOptions(const BoxTrackerCalculatorOptions& from);
  BoxTrackerCalculatorOptions(BoxTrackerCalculatorOptions&& from) noexcept
    : BoxTrackerCalculatorOptions() {
    *this = ::std::move(from);
  }

  inline BoxTrackerCalculatorOptions& operator=(const BoxTrackerCalculatorOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline BoxTrackerCalculatorOptions& operator=(BoxTrackerCalculatorOptions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BoxTrackerCalculatorOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const BoxTrackerCalculatorOptions* internal_default_instance() {
    return reinterpret_cast<const BoxTrackerCalculatorOptions*>(
               &_BoxTrackerCalculatorOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(BoxTrackerCalculatorOptions& a, BoxTrackerCalculatorOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(BoxTrackerCalculatorOptions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BoxTrackerCalculatorOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BoxTrackerCalculatorOptions* New() const final {
    return CreateMaybeMessage<BoxTrackerCalculatorOptions>(nullptr);
  }

  BoxTrackerCalculatorOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BoxTrackerCalculatorOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BoxTrackerCalculatorOptions& from);
  void MergeFrom(const BoxTrackerCalculatorOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BoxTrackerCalculatorOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.BoxTrackerCalculatorOptions";
  }
  protected:
  explicit BoxTrackerCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrackerOptionsFieldNumber = 1,
    kInitialPositionFieldNumber = 2,
    kVisualizeTrackingDataFieldNumber = 3,
    kVisualizeStateFieldNumber = 4,
    kVisualizeInternalStateFieldNumber = 5,
    kStreamingTrackDataCacheSizeFieldNumber = 6,
    kStartPosTransitionFramesFieldNumber = 7,
  };
  // optional .mediapipe.BoxTrackerOptions tracker_options = 1;
  bool has_tracker_options() const;
  private:
  bool _internal_has_tracker_options() const;
  public:
  void clear_tracker_options();
  const ::mediapipe::BoxTrackerOptions& tracker_options() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::mediapipe::BoxTrackerOptions* release_tracker_options();
  ::mediapipe::BoxTrackerOptions* mutable_tracker_options();
  void set_allocated_tracker_options(::mediapipe::BoxTrackerOptions* tracker_options);
  private:
  const ::mediapipe::BoxTrackerOptions& _internal_tracker_options() const;
  ::mediapipe::BoxTrackerOptions* _internal_mutable_tracker_options();
  public:
  void unsafe_arena_set_allocated_tracker_options(
      ::mediapipe::BoxTrackerOptions* tracker_options);
  ::mediapipe::BoxTrackerOptions* unsafe_arena_release_tracker_options();

  // optional .mediapipe.TimedBoxProtoList initial_position = 2;
  bool has_initial_position() const;
  private:
  bool _internal_has_initial_position() const;
  public:
  void clear_initial_position();
  const ::mediapipe::TimedBoxProtoList& initial_position() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::mediapipe::TimedBoxProtoList* release_initial_position();
  ::mediapipe::TimedBoxProtoList* mutable_initial_position();
  void set_allocated_initial_position(::mediapipe::TimedBoxProtoList* initial_position);
  private:
  const ::mediapipe::TimedBoxProtoList& _internal_initial_position() const;
  ::mediapipe::TimedBoxProtoList* _internal_mutable_initial_position();
  public:
  void unsafe_arena_set_allocated_initial_position(
      ::mediapipe::TimedBoxProtoList* initial_position);
  ::mediapipe::TimedBoxProtoList* unsafe_arena_release_initial_position();

  // optional bool visualize_tracking_data = 3 [default = false];
  bool has_visualize_tracking_data() const;
  private:
  bool _internal_has_visualize_tracking_data() const;
  public:
  void clear_visualize_tracking_data();
  bool visualize_tracking_data() const;
  void set_visualize_tracking_data(bool value);
  private:
  bool _internal_visualize_tracking_data() const;
  void _internal_set_visualize_tracking_data(bool value);
  public:

  // optional bool visualize_state = 4 [default = false];
  bool has_visualize_state() const;
  private:
  bool _internal_has_visualize_state() const;
  public:
  void clear_visualize_state();
  bool visualize_state() const;
  void set_visualize_state(bool value);
  private:
  bool _internal_visualize_state() const;
  void _internal_set_visualize_state(bool value);
  public:

  // optional bool visualize_internal_state = 5 [default = false];
  bool has_visualize_internal_state() const;
  private:
  bool _internal_has_visualize_internal_state() const;
  public:
  void clear_visualize_internal_state();
  bool visualize_internal_state() const;
  void set_visualize_internal_state(bool value);
  private:
  bool _internal_visualize_internal_state() const;
  void _internal_set_visualize_internal_state(bool value);
  public:

  // optional int32 streaming_track_data_cache_size = 6 [default = 0];
  bool has_streaming_track_data_cache_size() const;
  private:
  bool _internal_has_streaming_track_data_cache_size() const;
  public:
  void clear_streaming_track_data_cache_size();
  ::PROTOBUF_NAMESPACE_ID::int32 streaming_track_data_cache_size() const;
  void set_streaming_track_data_cache_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_streaming_track_data_cache_size() const;
  void _internal_set_streaming_track_data_cache_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 start_pos_transition_frames = 7 [default = 0];
  bool has_start_pos_transition_frames() const;
  private:
  bool _internal_has_start_pos_transition_frames() const;
  public:
  void clear_start_pos_transition_frames();
  ::PROTOBUF_NAMESPACE_ID::int32 start_pos_transition_frames() const;
  void set_start_pos_transition_frames(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_start_pos_transition_frames() const;
  void _internal_set_start_pos_transition_frames(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  static const int kExtFieldNumber = 268767860;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::BoxTrackerCalculatorOptions >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:mediapipe.BoxTrackerCalculatorOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::mediapipe::BoxTrackerOptions* tracker_options_;
  ::mediapipe::TimedBoxProtoList* initial_position_;
  bool visualize_tracking_data_;
  bool visualize_state_;
  bool visualize_internal_state_;
  ::PROTOBUF_NAMESPACE_ID::int32 streaming_track_data_cache_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 start_pos_transition_frames_;
  friend struct ::TableStruct_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// BoxTrackerCalculatorOptions

// optional .mediapipe.BoxTrackerOptions tracker_options = 1;
inline bool BoxTrackerCalculatorOptions::_internal_has_tracker_options() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || tracker_options_ != nullptr);
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_tracker_options() const {
  return _internal_has_tracker_options();
}
inline const ::mediapipe::BoxTrackerOptions& BoxTrackerCalculatorOptions::_internal_tracker_options() const {
  const ::mediapipe::BoxTrackerOptions* p = tracker_options_;
  return p != nullptr ? *p : reinterpret_cast<const ::mediapipe::BoxTrackerOptions&>(
      ::mediapipe::_BoxTrackerOptions_default_instance_);
}
inline const ::mediapipe::BoxTrackerOptions& BoxTrackerCalculatorOptions::tracker_options() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.tracker_options)
  return _internal_tracker_options();
}
inline void BoxTrackerCalculatorOptions::unsafe_arena_set_allocated_tracker_options(
    ::mediapipe::BoxTrackerOptions* tracker_options) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tracker_options_);
  }
  tracker_options_ = tracker_options;
  if (tracker_options) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mediapipe.BoxTrackerCalculatorOptions.tracker_options)
}
inline ::mediapipe::BoxTrackerOptions* BoxTrackerCalculatorOptions::release_tracker_options() {
  _has_bits_[0] &= ~0x00000001u;
  ::mediapipe::BoxTrackerOptions* temp = tracker_options_;
  tracker_options_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::mediapipe::BoxTrackerOptions* BoxTrackerCalculatorOptions::unsafe_arena_release_tracker_options() {
  // @@protoc_insertion_point(field_release:mediapipe.BoxTrackerCalculatorOptions.tracker_options)
  _has_bits_[0] &= ~0x00000001u;
  ::mediapipe::BoxTrackerOptions* temp = tracker_options_;
  tracker_options_ = nullptr;
  return temp;
}
inline ::mediapipe::BoxTrackerOptions* BoxTrackerCalculatorOptions::_internal_mutable_tracker_options() {
  _has_bits_[0] |= 0x00000001u;
  if (tracker_options_ == nullptr) {
    auto* p = CreateMaybeMessage<::mediapipe::BoxTrackerOptions>(GetArena());
    tracker_options_ = p;
  }
  return tracker_options_;
}
inline ::mediapipe::BoxTrackerOptions* BoxTrackerCalculatorOptions::mutable_tracker_options() {
  // @@protoc_insertion_point(field_mutable:mediapipe.BoxTrackerCalculatorOptions.tracker_options)
  return _internal_mutable_tracker_options();
}
inline void BoxTrackerCalculatorOptions::set_allocated_tracker_options(::mediapipe::BoxTrackerOptions* tracker_options) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(tracker_options_);
  }
  if (tracker_options) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(tracker_options)->GetArena();
    if (message_arena != submessage_arena) {
      tracker_options = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tracker_options, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  tracker_options_ = tracker_options;
  // @@protoc_insertion_point(field_set_allocated:mediapipe.BoxTrackerCalculatorOptions.tracker_options)
}

// optional .mediapipe.TimedBoxProtoList initial_position = 2;
inline bool BoxTrackerCalculatorOptions::_internal_has_initial_position() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || initial_position_ != nullptr);
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_initial_position() const {
  return _internal_has_initial_position();
}
inline const ::mediapipe::TimedBoxProtoList& BoxTrackerCalculatorOptions::_internal_initial_position() const {
  const ::mediapipe::TimedBoxProtoList* p = initial_position_;
  return p != nullptr ? *p : reinterpret_cast<const ::mediapipe::TimedBoxProtoList&>(
      ::mediapipe::_TimedBoxProtoList_default_instance_);
}
inline const ::mediapipe::TimedBoxProtoList& BoxTrackerCalculatorOptions::initial_position() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.initial_position)
  return _internal_initial_position();
}
inline void BoxTrackerCalculatorOptions::unsafe_arena_set_allocated_initial_position(
    ::mediapipe::TimedBoxProtoList* initial_position) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(initial_position_);
  }
  initial_position_ = initial_position;
  if (initial_position) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mediapipe.BoxTrackerCalculatorOptions.initial_position)
}
inline ::mediapipe::TimedBoxProtoList* BoxTrackerCalculatorOptions::release_initial_position() {
  _has_bits_[0] &= ~0x00000002u;
  ::mediapipe::TimedBoxProtoList* temp = initial_position_;
  initial_position_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::mediapipe::TimedBoxProtoList* BoxTrackerCalculatorOptions::unsafe_arena_release_initial_position() {
  // @@protoc_insertion_point(field_release:mediapipe.BoxTrackerCalculatorOptions.initial_position)
  _has_bits_[0] &= ~0x00000002u;
  ::mediapipe::TimedBoxProtoList* temp = initial_position_;
  initial_position_ = nullptr;
  return temp;
}
inline ::mediapipe::TimedBoxProtoList* BoxTrackerCalculatorOptions::_internal_mutable_initial_position() {
  _has_bits_[0] |= 0x00000002u;
  if (initial_position_ == nullptr) {
    auto* p = CreateMaybeMessage<::mediapipe::TimedBoxProtoList>(GetArena());
    initial_position_ = p;
  }
  return initial_position_;
}
inline ::mediapipe::TimedBoxProtoList* BoxTrackerCalculatorOptions::mutable_initial_position() {
  // @@protoc_insertion_point(field_mutable:mediapipe.BoxTrackerCalculatorOptions.initial_position)
  return _internal_mutable_initial_position();
}
inline void BoxTrackerCalculatorOptions::set_allocated_initial_position(::mediapipe::TimedBoxProtoList* initial_position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(initial_position_);
  }
  if (initial_position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(initial_position)->GetArena();
    if (message_arena != submessage_arena) {
      initial_position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, initial_position, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  initial_position_ = initial_position;
  // @@protoc_insertion_point(field_set_allocated:mediapipe.BoxTrackerCalculatorOptions.initial_position)
}

// optional bool visualize_tracking_data = 3 [default = false];
inline bool BoxTrackerCalculatorOptions::_internal_has_visualize_tracking_data() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_visualize_tracking_data() const {
  return _internal_has_visualize_tracking_data();
}
inline void BoxTrackerCalculatorOptions::clear_visualize_tracking_data() {
  visualize_tracking_data_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool BoxTrackerCalculatorOptions::_internal_visualize_tracking_data() const {
  return visualize_tracking_data_;
}
inline bool BoxTrackerCalculatorOptions::visualize_tracking_data() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.visualize_tracking_data)
  return _internal_visualize_tracking_data();
}
inline void BoxTrackerCalculatorOptions::_internal_set_visualize_tracking_data(bool value) {
  _has_bits_[0] |= 0x00000004u;
  visualize_tracking_data_ = value;
}
inline void BoxTrackerCalculatorOptions::set_visualize_tracking_data(bool value) {
  _internal_set_visualize_tracking_data(value);
  // @@protoc_insertion_point(field_set:mediapipe.BoxTrackerCalculatorOptions.visualize_tracking_data)
}

// optional bool visualize_state = 4 [default = false];
inline bool BoxTrackerCalculatorOptions::_internal_has_visualize_state() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_visualize_state() const {
  return _internal_has_visualize_state();
}
inline void BoxTrackerCalculatorOptions::clear_visualize_state() {
  visualize_state_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool BoxTrackerCalculatorOptions::_internal_visualize_state() const {
  return visualize_state_;
}
inline bool BoxTrackerCalculatorOptions::visualize_state() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.visualize_state)
  return _internal_visualize_state();
}
inline void BoxTrackerCalculatorOptions::_internal_set_visualize_state(bool value) {
  _has_bits_[0] |= 0x00000008u;
  visualize_state_ = value;
}
inline void BoxTrackerCalculatorOptions::set_visualize_state(bool value) {
  _internal_set_visualize_state(value);
  // @@protoc_insertion_point(field_set:mediapipe.BoxTrackerCalculatorOptions.visualize_state)
}

// optional bool visualize_internal_state = 5 [default = false];
inline bool BoxTrackerCalculatorOptions::_internal_has_visualize_internal_state() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_visualize_internal_state() const {
  return _internal_has_visualize_internal_state();
}
inline void BoxTrackerCalculatorOptions::clear_visualize_internal_state() {
  visualize_internal_state_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool BoxTrackerCalculatorOptions::_internal_visualize_internal_state() const {
  return visualize_internal_state_;
}
inline bool BoxTrackerCalculatorOptions::visualize_internal_state() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.visualize_internal_state)
  return _internal_visualize_internal_state();
}
inline void BoxTrackerCalculatorOptions::_internal_set_visualize_internal_state(bool value) {
  _has_bits_[0] |= 0x00000010u;
  visualize_internal_state_ = value;
}
inline void BoxTrackerCalculatorOptions::set_visualize_internal_state(bool value) {
  _internal_set_visualize_internal_state(value);
  // @@protoc_insertion_point(field_set:mediapipe.BoxTrackerCalculatorOptions.visualize_internal_state)
}

// optional int32 streaming_track_data_cache_size = 6 [default = 0];
inline bool BoxTrackerCalculatorOptions::_internal_has_streaming_track_data_cache_size() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_streaming_track_data_cache_size() const {
  return _internal_has_streaming_track_data_cache_size();
}
inline void BoxTrackerCalculatorOptions::clear_streaming_track_data_cache_size() {
  streaming_track_data_cache_size_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BoxTrackerCalculatorOptions::_internal_streaming_track_data_cache_size() const {
  return streaming_track_data_cache_size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BoxTrackerCalculatorOptions::streaming_track_data_cache_size() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.streaming_track_data_cache_size)
  return _internal_streaming_track_data_cache_size();
}
inline void BoxTrackerCalculatorOptions::_internal_set_streaming_track_data_cache_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  streaming_track_data_cache_size_ = value;
}
inline void BoxTrackerCalculatorOptions::set_streaming_track_data_cache_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_streaming_track_data_cache_size(value);
  // @@protoc_insertion_point(field_set:mediapipe.BoxTrackerCalculatorOptions.streaming_track_data_cache_size)
}

// optional int32 start_pos_transition_frames = 7 [default = 0];
inline bool BoxTrackerCalculatorOptions::_internal_has_start_pos_transition_frames() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool BoxTrackerCalculatorOptions::has_start_pos_transition_frames() const {
  return _internal_has_start_pos_transition_frames();
}
inline void BoxTrackerCalculatorOptions::clear_start_pos_transition_frames() {
  start_pos_transition_frames_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BoxTrackerCalculatorOptions::_internal_start_pos_transition_frames() const {
  return start_pos_transition_frames_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 BoxTrackerCalculatorOptions::start_pos_transition_frames() const {
  // @@protoc_insertion_point(field_get:mediapipe.BoxTrackerCalculatorOptions.start_pos_transition_frames)
  return _internal_start_pos_transition_frames();
}
inline void BoxTrackerCalculatorOptions::_internal_set_start_pos_transition_frames(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  start_pos_transition_frames_ = value;
}
inline void BoxTrackerCalculatorOptions::set_start_pos_transition_frames(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_start_pos_transition_frames(value);
  // @@protoc_insertion_point(field_set:mediapipe.BoxTrackerCalculatorOptions.start_pos_transition_frames)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mediapipe

// @@protoc_insertion_point(global_scope)

#include <x/google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fcalculators_2fvideo_2fbox_5ftracker_5fcalculator_2eproto
