// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/graphs/iris_tracking/calculators/iris_to_depth_calculator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto

#include <limits>
#include <string>

#include <x/google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <x/google/protobuf/port_undef.inc>
#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/arena.h>
#include <x/google/protobuf/arenastring.h>
#include <x/google/protobuf/generated_message_table_driven.h>
#include <x/google/protobuf/generated_message_util.h>
#include <x/google/protobuf/metadata_lite.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/message.h>
#include <x/google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <x/google/protobuf/extension_set.h>  // IWYU pragma: export
#include <x/google/protobuf/unknown_field_set.h>
#include "mediapipe/framework/calculator.pb.h"
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto;
namespace mediapipe {
class IrisToDepthCalculatorOptions;
struct IrisToDepthCalculatorOptionsDefaultTypeInternal;
extern IrisToDepthCalculatorOptionsDefaultTypeInternal _IrisToDepthCalculatorOptions_default_instance_;
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> ::mediapipe::IrisToDepthCalculatorOptions* Arena::CreateMaybeMessage<::mediapipe::IrisToDepthCalculatorOptions>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mediapipe {

// ===================================================================

class IrisToDepthCalculatorOptions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.IrisToDepthCalculatorOptions) */ {
 public:
  inline IrisToDepthCalculatorOptions() : IrisToDepthCalculatorOptions(nullptr) {}
  ~IrisToDepthCalculatorOptions() override;
  explicit constexpr IrisToDepthCalculatorOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrisToDepthCalculatorOptions(const IrisToDepthCalculatorOptions& from);
  IrisToDepthCalculatorOptions(IrisToDepthCalculatorOptions&& from) noexcept
    : IrisToDepthCalculatorOptions() {
    *this = ::std::move(from);
  }

  inline IrisToDepthCalculatorOptions& operator=(const IrisToDepthCalculatorOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrisToDepthCalculatorOptions& operator=(IrisToDepthCalculatorOptions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrisToDepthCalculatorOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrisToDepthCalculatorOptions* internal_default_instance() {
    return reinterpret_cast<const IrisToDepthCalculatorOptions*>(
               &_IrisToDepthCalculatorOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IrisToDepthCalculatorOptions& a, IrisToDepthCalculatorOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(IrisToDepthCalculatorOptions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrisToDepthCalculatorOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IrisToDepthCalculatorOptions* New() const final {
    return CreateMaybeMessage<IrisToDepthCalculatorOptions>(nullptr);
  }

  IrisToDepthCalculatorOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IrisToDepthCalculatorOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IrisToDepthCalculatorOptions& from);
  void MergeFrom(const IrisToDepthCalculatorOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrisToDepthCalculatorOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.IrisToDepthCalculatorOptions";
  }
  protected:
  explicit IrisToDepthCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeftIrisCenterIndexFieldNumber = 1,
    kRightIrisRightIndexFieldNumber = 10,
    kLeftIrisTopIndexFieldNumber = 2,
    kLeftIrisBottomIndexFieldNumber = 3,
    kLeftIrisLeftIndexFieldNumber = 4,
    kLeftIrisRightIndexFieldNumber = 5,
    kRightIrisCenterIndexFieldNumber = 6,
    kRightIrisTopIndexFieldNumber = 7,
    kRightIrisBottomIndexFieldNumber = 8,
    kRightIrisLeftIndexFieldNumber = 9,
  };
  // optional int32 left_iris_center_index = 1 [default = 0];
  bool has_left_iris_center_index() const;
  private:
  bool _internal_has_left_iris_center_index() const;
  public:
  void clear_left_iris_center_index();
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_center_index() const;
  void set_left_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_iris_center_index() const;
  void _internal_set_left_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 right_iris_right_index = 10 [default = 8];
  bool has_right_iris_right_index() const;
  private:
  bool _internal_has_right_iris_right_index() const;
  public:
  void clear_right_iris_right_index();
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_right_index() const;
  void set_right_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_iris_right_index() const;
  void _internal_set_right_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 left_iris_top_index = 2 [default = 2];
  bool has_left_iris_top_index() const;
  private:
  bool _internal_has_left_iris_top_index() const;
  public:
  void clear_left_iris_top_index();
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_top_index() const;
  void set_left_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_iris_top_index() const;
  void _internal_set_left_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 left_iris_bottom_index = 3 [default = 4];
  bool has_left_iris_bottom_index() const;
  private:
  bool _internal_has_left_iris_bottom_index() const;
  public:
  void clear_left_iris_bottom_index();
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_bottom_index() const;
  void set_left_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_iris_bottom_index() const;
  void _internal_set_left_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 left_iris_left_index = 4 [default = 3];
  bool has_left_iris_left_index() const;
  private:
  bool _internal_has_left_iris_left_index() const;
  public:
  void clear_left_iris_left_index();
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_left_index() const;
  void set_left_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_iris_left_index() const;
  void _internal_set_left_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 left_iris_right_index = 5 [default = 1];
  bool has_left_iris_right_index() const;
  private:
  bool _internal_has_left_iris_right_index() const;
  public:
  void clear_left_iris_right_index();
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_right_index() const;
  void set_left_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_left_iris_right_index() const;
  void _internal_set_left_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 right_iris_center_index = 6 [default = 5];
  bool has_right_iris_center_index() const;
  private:
  bool _internal_has_right_iris_center_index() const;
  public:
  void clear_right_iris_center_index();
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_center_index() const;
  void set_right_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_iris_center_index() const;
  void _internal_set_right_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 right_iris_top_index = 7 [default = 7];
  bool has_right_iris_top_index() const;
  private:
  bool _internal_has_right_iris_top_index() const;
  public:
  void clear_right_iris_top_index();
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_top_index() const;
  void set_right_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_iris_top_index() const;
  void _internal_set_right_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 right_iris_bottom_index = 8 [default = 9];
  bool has_right_iris_bottom_index() const;
  private:
  bool _internal_has_right_iris_bottom_index() const;
  public:
  void clear_right_iris_bottom_index();
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_bottom_index() const;
  void set_right_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_iris_bottom_index() const;
  void _internal_set_right_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 right_iris_left_index = 9 [default = 6];
  bool has_right_iris_left_index() const;
  private:
  bool _internal_has_right_iris_left_index() const;
  public:
  void clear_right_iris_left_index();
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_left_index() const;
  void set_right_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_right_iris_left_index() const;
  void _internal_set_right_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  static const int kExtFieldNumber = 303429002;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::IrisToDepthCalculatorOptions >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:mediapipe.IrisToDepthCalculatorOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_center_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_right_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_top_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_bottom_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_left_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 left_iris_right_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_center_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_top_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_bottom_index_;
  ::PROTOBUF_NAMESPACE_ID::int32 right_iris_left_index_;
  friend struct ::TableStruct_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IrisToDepthCalculatorOptions

// optional int32 left_iris_center_index = 1 [default = 0];
inline bool IrisToDepthCalculatorOptions::_internal_has_left_iris_center_index() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_left_iris_center_index() const {
  return _internal_has_left_iris_center_index();
}
inline void IrisToDepthCalculatorOptions::clear_left_iris_center_index() {
  left_iris_center_index_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_left_iris_center_index() const {
  return left_iris_center_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::left_iris_center_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.left_iris_center_index)
  return _internal_left_iris_center_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_left_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  left_iris_center_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_left_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_iris_center_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.left_iris_center_index)
}

// optional int32 left_iris_top_index = 2 [default = 2];
inline bool IrisToDepthCalculatorOptions::_internal_has_left_iris_top_index() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_left_iris_top_index() const {
  return _internal_has_left_iris_top_index();
}
inline void IrisToDepthCalculatorOptions::clear_left_iris_top_index() {
  left_iris_top_index_ = 2;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_left_iris_top_index() const {
  return left_iris_top_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::left_iris_top_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.left_iris_top_index)
  return _internal_left_iris_top_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_left_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  left_iris_top_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_left_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_iris_top_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.left_iris_top_index)
}

// optional int32 left_iris_bottom_index = 3 [default = 4];
inline bool IrisToDepthCalculatorOptions::_internal_has_left_iris_bottom_index() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_left_iris_bottom_index() const {
  return _internal_has_left_iris_bottom_index();
}
inline void IrisToDepthCalculatorOptions::clear_left_iris_bottom_index() {
  left_iris_bottom_index_ = 4;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_left_iris_bottom_index() const {
  return left_iris_bottom_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::left_iris_bottom_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.left_iris_bottom_index)
  return _internal_left_iris_bottom_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_left_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  left_iris_bottom_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_left_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_iris_bottom_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.left_iris_bottom_index)
}

// optional int32 left_iris_left_index = 4 [default = 3];
inline bool IrisToDepthCalculatorOptions::_internal_has_left_iris_left_index() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_left_iris_left_index() const {
  return _internal_has_left_iris_left_index();
}
inline void IrisToDepthCalculatorOptions::clear_left_iris_left_index() {
  left_iris_left_index_ = 3;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_left_iris_left_index() const {
  return left_iris_left_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::left_iris_left_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.left_iris_left_index)
  return _internal_left_iris_left_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_left_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  left_iris_left_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_left_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_iris_left_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.left_iris_left_index)
}

// optional int32 left_iris_right_index = 5 [default = 1];
inline bool IrisToDepthCalculatorOptions::_internal_has_left_iris_right_index() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_left_iris_right_index() const {
  return _internal_has_left_iris_right_index();
}
inline void IrisToDepthCalculatorOptions::clear_left_iris_right_index() {
  left_iris_right_index_ = 1;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_left_iris_right_index() const {
  return left_iris_right_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::left_iris_right_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.left_iris_right_index)
  return _internal_left_iris_right_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_left_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  left_iris_right_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_left_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_left_iris_right_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.left_iris_right_index)
}

// optional int32 right_iris_center_index = 6 [default = 5];
inline bool IrisToDepthCalculatorOptions::_internal_has_right_iris_center_index() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_right_iris_center_index() const {
  return _internal_has_right_iris_center_index();
}
inline void IrisToDepthCalculatorOptions::clear_right_iris_center_index() {
  right_iris_center_index_ = 5;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_right_iris_center_index() const {
  return right_iris_center_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::right_iris_center_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.right_iris_center_index)
  return _internal_right_iris_center_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_right_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  right_iris_center_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_right_iris_center_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_iris_center_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.right_iris_center_index)
}

// optional int32 right_iris_top_index = 7 [default = 7];
inline bool IrisToDepthCalculatorOptions::_internal_has_right_iris_top_index() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_right_iris_top_index() const {
  return _internal_has_right_iris_top_index();
}
inline void IrisToDepthCalculatorOptions::clear_right_iris_top_index() {
  right_iris_top_index_ = 7;
  _has_bits_[0] &= ~0x00000080u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_right_iris_top_index() const {
  return right_iris_top_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::right_iris_top_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.right_iris_top_index)
  return _internal_right_iris_top_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_right_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000080u;
  right_iris_top_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_right_iris_top_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_iris_top_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.right_iris_top_index)
}

// optional int32 right_iris_bottom_index = 8 [default = 9];
inline bool IrisToDepthCalculatorOptions::_internal_has_right_iris_bottom_index() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_right_iris_bottom_index() const {
  return _internal_has_right_iris_bottom_index();
}
inline void IrisToDepthCalculatorOptions::clear_right_iris_bottom_index() {
  right_iris_bottom_index_ = 9;
  _has_bits_[0] &= ~0x00000100u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_right_iris_bottom_index() const {
  return right_iris_bottom_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::right_iris_bottom_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.right_iris_bottom_index)
  return _internal_right_iris_bottom_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_right_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000100u;
  right_iris_bottom_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_right_iris_bottom_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_iris_bottom_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.right_iris_bottom_index)
}

// optional int32 right_iris_left_index = 9 [default = 6];
inline bool IrisToDepthCalculatorOptions::_internal_has_right_iris_left_index() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_right_iris_left_index() const {
  return _internal_has_right_iris_left_index();
}
inline void IrisToDepthCalculatorOptions::clear_right_iris_left_index() {
  right_iris_left_index_ = 6;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_right_iris_left_index() const {
  return right_iris_left_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::right_iris_left_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.right_iris_left_index)
  return _internal_right_iris_left_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_right_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  right_iris_left_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_right_iris_left_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_iris_left_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.right_iris_left_index)
}

// optional int32 right_iris_right_index = 10 [default = 8];
inline bool IrisToDepthCalculatorOptions::_internal_has_right_iris_right_index() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool IrisToDepthCalculatorOptions::has_right_iris_right_index() const {
  return _internal_has_right_iris_right_index();
}
inline void IrisToDepthCalculatorOptions::clear_right_iris_right_index() {
  right_iris_right_index_ = 8;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::_internal_right_iris_right_index() const {
  return right_iris_right_index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToDepthCalculatorOptions::right_iris_right_index() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToDepthCalculatorOptions.right_iris_right_index)
  return _internal_right_iris_right_index();
}
inline void IrisToDepthCalculatorOptions::_internal_set_right_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  right_iris_right_index_ = value;
}
inline void IrisToDepthCalculatorOptions::set_right_iris_right_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_right_iris_right_index(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToDepthCalculatorOptions.right_iris_right_index)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mediapipe

// @@protoc_insertion_point(global_scope)

#include <x/google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5fdepth_5fcalculator_2eproto
