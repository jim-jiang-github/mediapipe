// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/graphs/iris_tracking/calculators/iris_to_render_data_calculator.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto

#include <limits>
#include <string>

#include <x/google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <x/google/protobuf/port_undef.inc>
#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/arena.h>
#include <x/google/protobuf/arenastring.h>
#include <x/google/protobuf/generated_message_table_driven.h>
#include <x/google/protobuf/generated_message_util.h>
#include <x/google/protobuf/metadata_lite.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/message.h>
#include <x/google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <x/google/protobuf/extension_set.h>  // IWYU pragma: export
#include <x/google/protobuf/generated_enum_reflection.h>
#include <x/google/protobuf/unknown_field_set.h>
#include "mediapipe/framework/calculator.pb.h"
#include "mediapipe/util/color.pb.h"
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto;
namespace mediapipe {
class IrisToRenderDataCalculatorOptions;
struct IrisToRenderDataCalculatorOptionsDefaultTypeInternal;
extern IrisToRenderDataCalculatorOptionsDefaultTypeInternal _IrisToRenderDataCalculatorOptions_default_instance_;
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> ::mediapipe::IrisToRenderDataCalculatorOptions* Arena::CreateMaybeMessage<::mediapipe::IrisToRenderDataCalculatorOptions>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mediapipe {

enum IrisToRenderDataCalculatorOptions_Location : int {
  IrisToRenderDataCalculatorOptions_Location_TOP_LEFT = 0,
  IrisToRenderDataCalculatorOptions_Location_BOTTOM_LEFT = 1
};
bool IrisToRenderDataCalculatorOptions_Location_IsValid(int value);
constexpr IrisToRenderDataCalculatorOptions_Location IrisToRenderDataCalculatorOptions_Location_Location_MIN = IrisToRenderDataCalculatorOptions_Location_TOP_LEFT;
constexpr IrisToRenderDataCalculatorOptions_Location IrisToRenderDataCalculatorOptions_Location_Location_MAX = IrisToRenderDataCalculatorOptions_Location_BOTTOM_LEFT;
constexpr int IrisToRenderDataCalculatorOptions_Location_Location_ARRAYSIZE = IrisToRenderDataCalculatorOptions_Location_Location_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IrisToRenderDataCalculatorOptions_Location_descriptor();
template<typename T>
inline const std::string& IrisToRenderDataCalculatorOptions_Location_Name(T enum_t_value) {
  static_assert(::std::is_same<T, IrisToRenderDataCalculatorOptions_Location>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function IrisToRenderDataCalculatorOptions_Location_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    IrisToRenderDataCalculatorOptions_Location_descriptor(), enum_t_value);
}
inline bool IrisToRenderDataCalculatorOptions_Location_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, IrisToRenderDataCalculatorOptions_Location* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<IrisToRenderDataCalculatorOptions_Location>(
    IrisToRenderDataCalculatorOptions_Location_descriptor(), name, value);
}
// ===================================================================

class IrisToRenderDataCalculatorOptions PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.IrisToRenderDataCalculatorOptions) */ {
 public:
  inline IrisToRenderDataCalculatorOptions() : IrisToRenderDataCalculatorOptions(nullptr) {}
  ~IrisToRenderDataCalculatorOptions() override;
  explicit constexpr IrisToRenderDataCalculatorOptions(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  IrisToRenderDataCalculatorOptions(const IrisToRenderDataCalculatorOptions& from);
  IrisToRenderDataCalculatorOptions(IrisToRenderDataCalculatorOptions&& from) noexcept
    : IrisToRenderDataCalculatorOptions() {
    *this = ::std::move(from);
  }

  inline IrisToRenderDataCalculatorOptions& operator=(const IrisToRenderDataCalculatorOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline IrisToRenderDataCalculatorOptions& operator=(IrisToRenderDataCalculatorOptions&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IrisToRenderDataCalculatorOptions& default_instance() {
    return *internal_default_instance();
  }
  static inline const IrisToRenderDataCalculatorOptions* internal_default_instance() {
    return reinterpret_cast<const IrisToRenderDataCalculatorOptions*>(
               &_IrisToRenderDataCalculatorOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IrisToRenderDataCalculatorOptions& a, IrisToRenderDataCalculatorOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(IrisToRenderDataCalculatorOptions* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IrisToRenderDataCalculatorOptions* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IrisToRenderDataCalculatorOptions* New() const final {
    return CreateMaybeMessage<IrisToRenderDataCalculatorOptions>(nullptr);
  }

  IrisToRenderDataCalculatorOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IrisToRenderDataCalculatorOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IrisToRenderDataCalculatorOptions& from);
  void MergeFrom(const IrisToRenderDataCalculatorOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IrisToRenderDataCalculatorOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.IrisToRenderDataCalculatorOptions";
  }
  protected:
  explicit IrisToRenderDataCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef IrisToRenderDataCalculatorOptions_Location Location;
  static constexpr Location TOP_LEFT =
    IrisToRenderDataCalculatorOptions_Location_TOP_LEFT;
  static constexpr Location BOTTOM_LEFT =
    IrisToRenderDataCalculatorOptions_Location_BOTTOM_LEFT;
  static inline bool Location_IsValid(int value) {
    return IrisToRenderDataCalculatorOptions_Location_IsValid(value);
  }
  static constexpr Location Location_MIN =
    IrisToRenderDataCalculatorOptions_Location_Location_MIN;
  static constexpr Location Location_MAX =
    IrisToRenderDataCalculatorOptions_Location_Location_MAX;
  static constexpr int Location_ARRAYSIZE =
    IrisToRenderDataCalculatorOptions_Location_Location_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  Location_descriptor() {
    return IrisToRenderDataCalculatorOptions_Location_descriptor();
  }
  template<typename T>
  static inline const std::string& Location_Name(T enum_t_value) {
    static_assert(::std::is_same<T, Location>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function Location_Name.");
    return IrisToRenderDataCalculatorOptions_Location_Name(enum_t_value);
  }
  static inline bool Location_Parse(::PROTOBUF_NAMESPACE_ID::ConstStringParam name,
      Location* value) {
    return IrisToRenderDataCalculatorOptions_Location_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kOvalColorFieldNumber = 1,
    kLandmarkColorFieldNumber = 9,
    kFontFaceFieldNumber = 5,
    kLocationFieldNumber = 6,
    kHorizontalOffsetPxFieldNumber = 7,
    kVerticalOffsetPxFieldNumber = 8,
    kFontHeightPxFieldNumber = 3,
    kOvalThicknessFieldNumber = 2,
    kLandmarkThicknessFieldNumber = 10,
  };
  // optional .mediapipe.Color oval_color = 1;
  bool has_oval_color() const;
  private:
  bool _internal_has_oval_color() const;
  public:
  void clear_oval_color();
  const ::mediapipe::Color& oval_color() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::mediapipe::Color* release_oval_color();
  ::mediapipe::Color* mutable_oval_color();
  void set_allocated_oval_color(::mediapipe::Color* oval_color);
  private:
  const ::mediapipe::Color& _internal_oval_color() const;
  ::mediapipe::Color* _internal_mutable_oval_color();
  public:
  void unsafe_arena_set_allocated_oval_color(
      ::mediapipe::Color* oval_color);
  ::mediapipe::Color* unsafe_arena_release_oval_color();

  // optional .mediapipe.Color landmark_color = 9;
  bool has_landmark_color() const;
  private:
  bool _internal_has_landmark_color() const;
  public:
  void clear_landmark_color();
  const ::mediapipe::Color& landmark_color() const;
  PROTOBUF_FUTURE_MUST_USE_RESULT ::mediapipe::Color* release_landmark_color();
  ::mediapipe::Color* mutable_landmark_color();
  void set_allocated_landmark_color(::mediapipe::Color* landmark_color);
  private:
  const ::mediapipe::Color& _internal_landmark_color() const;
  ::mediapipe::Color* _internal_mutable_landmark_color();
  public:
  void unsafe_arena_set_allocated_landmark_color(
      ::mediapipe::Color* landmark_color);
  ::mediapipe::Color* unsafe_arena_release_landmark_color();

  // optional int32 font_face = 5 [default = 0];
  bool has_font_face() const;
  private:
  bool _internal_has_font_face() const;
  public:
  void clear_font_face();
  ::PROTOBUF_NAMESPACE_ID::int32 font_face() const;
  void set_font_face(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_font_face() const;
  void _internal_set_font_face(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional .mediapipe.IrisToRenderDataCalculatorOptions.Location location = 6 [default = TOP_LEFT];
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  ::mediapipe::IrisToRenderDataCalculatorOptions_Location location() const;
  void set_location(::mediapipe::IrisToRenderDataCalculatorOptions_Location value);
  private:
  ::mediapipe::IrisToRenderDataCalculatorOptions_Location _internal_location() const;
  void _internal_set_location(::mediapipe::IrisToRenderDataCalculatorOptions_Location value);
  public:

  // optional int32 horizontal_offset_px = 7 [default = 0];
  bool has_horizontal_offset_px() const;
  private:
  bool _internal_has_horizontal_offset_px() const;
  public:
  void clear_horizontal_offset_px();
  ::PROTOBUF_NAMESPACE_ID::int32 horizontal_offset_px() const;
  void set_horizontal_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_horizontal_offset_px() const;
  void _internal_set_horizontal_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 vertical_offset_px = 8 [default = 0];
  bool has_vertical_offset_px() const;
  private:
  bool _internal_has_vertical_offset_px() const;
  public:
  void clear_vertical_offset_px();
  ::PROTOBUF_NAMESPACE_ID::int32 vertical_offset_px() const;
  void set_vertical_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_vertical_offset_px() const;
  void _internal_set_vertical_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 font_height_px = 3 [default = 50];
  bool has_font_height_px() const;
  private:
  bool _internal_has_font_height_px() const;
  public:
  void clear_font_height_px();
  ::PROTOBUF_NAMESPACE_ID::int32 font_height_px() const;
  void set_font_height_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_font_height_px() const;
  void _internal_set_font_height_px(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional double oval_thickness = 2 [default = 1];
  bool has_oval_thickness() const;
  private:
  bool _internal_has_oval_thickness() const;
  public:
  void clear_oval_thickness();
  double oval_thickness() const;
  void set_oval_thickness(double value);
  private:
  double _internal_oval_thickness() const;
  void _internal_set_oval_thickness(double value);
  public:

  // optional double landmark_thickness = 10 [default = 1];
  bool has_landmark_thickness() const;
  private:
  bool _internal_has_landmark_thickness() const;
  public:
  void clear_landmark_thickness();
  double landmark_thickness() const;
  void set_landmark_thickness(double value);
  private:
  double _internal_landmark_thickness() const;
  void _internal_set_landmark_thickness(double value);
  public:

  static const int kExtFieldNumber = 289530040;
  static ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
      ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::IrisToRenderDataCalculatorOptions >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:mediapipe.IrisToRenderDataCalculatorOptions)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::mediapipe::Color* oval_color_;
  ::mediapipe::Color* landmark_color_;
  ::PROTOBUF_NAMESPACE_ID::int32 font_face_;
  int location_;
  ::PROTOBUF_NAMESPACE_ID::int32 horizontal_offset_px_;
  ::PROTOBUF_NAMESPACE_ID::int32 vertical_offset_px_;
  ::PROTOBUF_NAMESPACE_ID::int32 font_height_px_;
  double oval_thickness_;
  double landmark_thickness_;
  friend struct ::TableStruct_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IrisToRenderDataCalculatorOptions

// optional .mediapipe.Color oval_color = 1;
inline bool IrisToRenderDataCalculatorOptions::_internal_has_oval_color() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || oval_color_ != nullptr);
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_oval_color() const {
  return _internal_has_oval_color();
}
inline const ::mediapipe::Color& IrisToRenderDataCalculatorOptions::_internal_oval_color() const {
  const ::mediapipe::Color* p = oval_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::mediapipe::Color&>(
      ::mediapipe::_Color_default_instance_);
}
inline const ::mediapipe::Color& IrisToRenderDataCalculatorOptions::oval_color() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.oval_color)
  return _internal_oval_color();
}
inline void IrisToRenderDataCalculatorOptions::unsafe_arena_set_allocated_oval_color(
    ::mediapipe::Color* oval_color) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oval_color_);
  }
  oval_color_ = oval_color;
  if (oval_color) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mediapipe.IrisToRenderDataCalculatorOptions.oval_color)
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::release_oval_color() {
  _has_bits_[0] &= ~0x00000001u;
  ::mediapipe::Color* temp = oval_color_;
  oval_color_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::unsafe_arena_release_oval_color() {
  // @@protoc_insertion_point(field_release:mediapipe.IrisToRenderDataCalculatorOptions.oval_color)
  _has_bits_[0] &= ~0x00000001u;
  ::mediapipe::Color* temp = oval_color_;
  oval_color_ = nullptr;
  return temp;
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::_internal_mutable_oval_color() {
  _has_bits_[0] |= 0x00000001u;
  if (oval_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::mediapipe::Color>(GetArena());
    oval_color_ = p;
  }
  return oval_color_;
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::mutable_oval_color() {
  // @@protoc_insertion_point(field_mutable:mediapipe.IrisToRenderDataCalculatorOptions.oval_color)
  return _internal_mutable_oval_color();
}
inline void IrisToRenderDataCalculatorOptions::set_allocated_oval_color(::mediapipe::Color* oval_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(oval_color_);
  }
  if (oval_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(oval_color)->GetArena();
    if (message_arena != submessage_arena) {
      oval_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, oval_color, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  oval_color_ = oval_color;
  // @@protoc_insertion_point(field_set_allocated:mediapipe.IrisToRenderDataCalculatorOptions.oval_color)
}

// optional .mediapipe.Color landmark_color = 9;
inline bool IrisToRenderDataCalculatorOptions::_internal_has_landmark_color() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || landmark_color_ != nullptr);
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_landmark_color() const {
  return _internal_has_landmark_color();
}
inline const ::mediapipe::Color& IrisToRenderDataCalculatorOptions::_internal_landmark_color() const {
  const ::mediapipe::Color* p = landmark_color_;
  return p != nullptr ? *p : reinterpret_cast<const ::mediapipe::Color&>(
      ::mediapipe::_Color_default_instance_);
}
inline const ::mediapipe::Color& IrisToRenderDataCalculatorOptions::landmark_color() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.landmark_color)
  return _internal_landmark_color();
}
inline void IrisToRenderDataCalculatorOptions::unsafe_arena_set_allocated_landmark_color(
    ::mediapipe::Color* landmark_color) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(landmark_color_);
  }
  landmark_color_ = landmark_color;
  if (landmark_color) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:mediapipe.IrisToRenderDataCalculatorOptions.landmark_color)
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::release_landmark_color() {
  _has_bits_[0] &= ~0x00000002u;
  ::mediapipe::Color* temp = landmark_color_;
  landmark_color_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::unsafe_arena_release_landmark_color() {
  // @@protoc_insertion_point(field_release:mediapipe.IrisToRenderDataCalculatorOptions.landmark_color)
  _has_bits_[0] &= ~0x00000002u;
  ::mediapipe::Color* temp = landmark_color_;
  landmark_color_ = nullptr;
  return temp;
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::_internal_mutable_landmark_color() {
  _has_bits_[0] |= 0x00000002u;
  if (landmark_color_ == nullptr) {
    auto* p = CreateMaybeMessage<::mediapipe::Color>(GetArena());
    landmark_color_ = p;
  }
  return landmark_color_;
}
inline ::mediapipe::Color* IrisToRenderDataCalculatorOptions::mutable_landmark_color() {
  // @@protoc_insertion_point(field_mutable:mediapipe.IrisToRenderDataCalculatorOptions.landmark_color)
  return _internal_mutable_landmark_color();
}
inline void IrisToRenderDataCalculatorOptions::set_allocated_landmark_color(::mediapipe::Color* landmark_color) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(landmark_color_);
  }
  if (landmark_color) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(landmark_color)->GetArena();
    if (message_arena != submessage_arena) {
      landmark_color = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, landmark_color, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  landmark_color_ = landmark_color;
  // @@protoc_insertion_point(field_set_allocated:mediapipe.IrisToRenderDataCalculatorOptions.landmark_color)
}

// optional double oval_thickness = 2 [default = 1];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_oval_thickness() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_oval_thickness() const {
  return _internal_has_oval_thickness();
}
inline void IrisToRenderDataCalculatorOptions::clear_oval_thickness() {
  oval_thickness_ = 1;
  _has_bits_[0] &= ~0x00000080u;
}
inline double IrisToRenderDataCalculatorOptions::_internal_oval_thickness() const {
  return oval_thickness_;
}
inline double IrisToRenderDataCalculatorOptions::oval_thickness() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.oval_thickness)
  return _internal_oval_thickness();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_oval_thickness(double value) {
  _has_bits_[0] |= 0x00000080u;
  oval_thickness_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_oval_thickness(double value) {
  _internal_set_oval_thickness(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.oval_thickness)
}

// optional double landmark_thickness = 10 [default = 1];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_landmark_thickness() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_landmark_thickness() const {
  return _internal_has_landmark_thickness();
}
inline void IrisToRenderDataCalculatorOptions::clear_landmark_thickness() {
  landmark_thickness_ = 1;
  _has_bits_[0] &= ~0x00000100u;
}
inline double IrisToRenderDataCalculatorOptions::_internal_landmark_thickness() const {
  return landmark_thickness_;
}
inline double IrisToRenderDataCalculatorOptions::landmark_thickness() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.landmark_thickness)
  return _internal_landmark_thickness();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_landmark_thickness(double value) {
  _has_bits_[0] |= 0x00000100u;
  landmark_thickness_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_landmark_thickness(double value) {
  _internal_set_landmark_thickness(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.landmark_thickness)
}

// optional int32 font_height_px = 3 [default = 50];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_font_height_px() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_font_height_px() const {
  return _internal_has_font_height_px();
}
inline void IrisToRenderDataCalculatorOptions::clear_font_height_px() {
  font_height_px_ = 50;
  _has_bits_[0] &= ~0x00000040u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::_internal_font_height_px() const {
  return font_height_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::font_height_px() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.font_height_px)
  return _internal_font_height_px();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_font_height_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000040u;
  font_height_px_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_font_height_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_font_height_px(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.font_height_px)
}

// optional int32 horizontal_offset_px = 7 [default = 0];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_horizontal_offset_px() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_horizontal_offset_px() const {
  return _internal_has_horizontal_offset_px();
}
inline void IrisToRenderDataCalculatorOptions::clear_horizontal_offset_px() {
  horizontal_offset_px_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::_internal_horizontal_offset_px() const {
  return horizontal_offset_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::horizontal_offset_px() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.horizontal_offset_px)
  return _internal_horizontal_offset_px();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_horizontal_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  horizontal_offset_px_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_horizontal_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_horizontal_offset_px(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.horizontal_offset_px)
}

// optional int32 vertical_offset_px = 8 [default = 0];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_vertical_offset_px() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_vertical_offset_px() const {
  return _internal_has_vertical_offset_px();
}
inline void IrisToRenderDataCalculatorOptions::clear_vertical_offset_px() {
  vertical_offset_px_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::_internal_vertical_offset_px() const {
  return vertical_offset_px_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::vertical_offset_px() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.vertical_offset_px)
  return _internal_vertical_offset_px();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_vertical_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  vertical_offset_px_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_vertical_offset_px(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_vertical_offset_px(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.vertical_offset_px)
}

// optional int32 font_face = 5 [default = 0];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_font_face() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_font_face() const {
  return _internal_has_font_face();
}
inline void IrisToRenderDataCalculatorOptions::clear_font_face() {
  font_face_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::_internal_font_face() const {
  return font_face_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IrisToRenderDataCalculatorOptions::font_face() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.font_face)
  return _internal_font_face();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_font_face(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  font_face_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_font_face(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_font_face(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.font_face)
}

// optional .mediapipe.IrisToRenderDataCalculatorOptions.Location location = 6 [default = TOP_LEFT];
inline bool IrisToRenderDataCalculatorOptions::_internal_has_location() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool IrisToRenderDataCalculatorOptions::has_location() const {
  return _internal_has_location();
}
inline void IrisToRenderDataCalculatorOptions::clear_location() {
  location_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::mediapipe::IrisToRenderDataCalculatorOptions_Location IrisToRenderDataCalculatorOptions::_internal_location() const {
  return static_cast< ::mediapipe::IrisToRenderDataCalculatorOptions_Location >(location_);
}
inline ::mediapipe::IrisToRenderDataCalculatorOptions_Location IrisToRenderDataCalculatorOptions::location() const {
  // @@protoc_insertion_point(field_get:mediapipe.IrisToRenderDataCalculatorOptions.location)
  return _internal_location();
}
inline void IrisToRenderDataCalculatorOptions::_internal_set_location(::mediapipe::IrisToRenderDataCalculatorOptions_Location value) {
  assert(::mediapipe::IrisToRenderDataCalculatorOptions_Location_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  location_ = value;
}
inline void IrisToRenderDataCalculatorOptions::set_location(::mediapipe::IrisToRenderDataCalculatorOptions_Location value) {
  _internal_set_location(value);
  // @@protoc_insertion_point(field_set:mediapipe.IrisToRenderDataCalculatorOptions.location)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mediapipe

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::mediapipe::IrisToRenderDataCalculatorOptions_Location> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mediapipe::IrisToRenderDataCalculatorOptions_Location>() {
  return ::mediapipe::IrisToRenderDataCalculatorOptions_Location_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <x/google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2firis_5ftracking_2fcalculators_2firis_5fto_5frender_5fdata_5fcalculator_2eproto
