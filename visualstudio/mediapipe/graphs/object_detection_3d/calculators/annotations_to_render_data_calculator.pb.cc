// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/graphs/object_detection_3d/calculators/annotations_to_render_data_calculator.proto

#include "mediapipe/graphs/object_detection_3d/calculators/annotations_to_render_data_calculator.pb.h"

#include <algorithm>

#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/extension_set.h>
#include <x/google/protobuf/wire_format_lite.h>
#include <x/google/protobuf/descriptor.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/reflection_ops.h>
#include <x/google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mediapipe {
constexpr AnnotationsToRenderDataCalculatorOptions::AnnotationsToRenderDataCalculatorOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : landmark_connections_()
  , landmark_color_(nullptr)
  , connection_color_(nullptr)
  , visualize_landmark_depth_(true)
  , thickness_(1){}
struct AnnotationsToRenderDataCalculatorOptionsDefaultTypeInternal {
  constexpr AnnotationsToRenderDataCalculatorOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~AnnotationsToRenderDataCalculatorOptionsDefaultTypeInternal() {}
  union {
    AnnotationsToRenderDataCalculatorOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT AnnotationsToRenderDataCalculatorOptionsDefaultTypeInternal _AnnotationsToRenderDataCalculatorOptions_default_instance_;
}  // namespace mediapipe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, landmark_connections_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, landmark_color_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, connection_color_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, thickness_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::AnnotationsToRenderDataCalculatorOptions, visualize_landmark_depth_),
  ~0u,
  0,
  1,
  3,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 10, sizeof(::mediapipe::AnnotationsToRenderDataCalculatorOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_AnnotationsToRenderDataCalculatorOptions_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\\mediapipe/graphs/object_detection_3d/c"
  "alculators/annotations_to_render_data_ca"
  "lculator.proto\022\tmediapipe\032$mediapipe/fra"
  "mework/calculator.proto\032\032mediapipe/util/"
  "color.proto\"\277\002\n(AnnotationsToRenderDataC"
  "alculatorOptions\022\034\n\024landmark_connections"
  "\030\001 \003(\005\022(\n\016landmark_color\030\002 \001(\0132\020.mediapi"
  "pe.Color\022*\n\020connection_color\030\003 \001(\0132\020.med"
  "iapipe.Color\022\024\n\tthickness\030\004 \001(\001:\0011\022&\n\030vi"
  "sualize_landmark_depth\030\005 \001(\010:\004true2a\n\003ex"
  "t\022\034.mediapipe.CalculatorOptions\030\316\332\317\177 \001(\013"
  "23.mediapipe.AnnotationsToRenderDataCalc"
  "ulatorOptions"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_deps[2] = {
  &::descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
  &::descriptor_table_mediapipe_2futil_2fcolor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto = {
  false, false, 493, descriptor_table_protodef_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto, "mediapipe/graphs/object_detection_3d/calculators/annotations_to_render_data_calculator.proto", 
  &descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_once, descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto::offsets,
  file_level_metadata_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto, file_level_enum_descriptors_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto, file_level_service_descriptors_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_getter() {
  return &descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto(&descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto);
namespace mediapipe {

// ===================================================================

class AnnotationsToRenderDataCalculatorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<AnnotationsToRenderDataCalculatorOptions>()._has_bits_);
  static const ::mediapipe::Color& landmark_color(const AnnotationsToRenderDataCalculatorOptions* msg);
  static void set_has_landmark_color(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::mediapipe::Color& connection_color(const AnnotationsToRenderDataCalculatorOptions* msg);
  static void set_has_connection_color(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_thickness(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_visualize_landmark_depth(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::mediapipe::Color&
AnnotationsToRenderDataCalculatorOptions::_Internal::landmark_color(const AnnotationsToRenderDataCalculatorOptions* msg) {
  return *msg->landmark_color_;
}
const ::mediapipe::Color&
AnnotationsToRenderDataCalculatorOptions::_Internal::connection_color(const AnnotationsToRenderDataCalculatorOptions* msg) {
  return *msg->connection_color_;
}
void AnnotationsToRenderDataCalculatorOptions::clear_landmark_color() {
  if (landmark_color_ != nullptr) landmark_color_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void AnnotationsToRenderDataCalculatorOptions::clear_connection_color() {
  if (connection_color_ != nullptr) connection_color_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
AnnotationsToRenderDataCalculatorOptions::AnnotationsToRenderDataCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  landmark_connections_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.AnnotationsToRenderDataCalculatorOptions)
}
AnnotationsToRenderDataCalculatorOptions::AnnotationsToRenderDataCalculatorOptions(const AnnotationsToRenderDataCalculatorOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_),
      landmark_connections_(from.landmark_connections_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_landmark_color()) {
    landmark_color_ = new ::mediapipe::Color(*from.landmark_color_);
  } else {
    landmark_color_ = nullptr;
  }
  if (from._internal_has_connection_color()) {
    connection_color_ = new ::mediapipe::Color(*from.connection_color_);
  } else {
    connection_color_ = nullptr;
  }
  ::memcpy(&visualize_landmark_depth_, &from.visualize_landmark_depth_,
    static_cast<size_t>(reinterpret_cast<char*>(&thickness_) -
    reinterpret_cast<char*>(&visualize_landmark_depth_)) + sizeof(thickness_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.AnnotationsToRenderDataCalculatorOptions)
}

void AnnotationsToRenderDataCalculatorOptions::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&landmark_color_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&connection_color_) -
    reinterpret_cast<char*>(&landmark_color_)) + sizeof(connection_color_));
visualize_landmark_depth_ = true;
thickness_ = 1;
}

AnnotationsToRenderDataCalculatorOptions::~AnnotationsToRenderDataCalculatorOptions() {
  // @@protoc_insertion_point(destructor:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AnnotationsToRenderDataCalculatorOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete landmark_color_;
  if (this != internal_default_instance()) delete connection_color_;
}

void AnnotationsToRenderDataCalculatorOptions::ArenaDtor(void* object) {
  AnnotationsToRenderDataCalculatorOptions* _this = reinterpret_cast< AnnotationsToRenderDataCalculatorOptions* >(object);
  (void)_this;
}
void AnnotationsToRenderDataCalculatorOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AnnotationsToRenderDataCalculatorOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void AnnotationsToRenderDataCalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  landmark_connections_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(landmark_color_ != nullptr);
      landmark_color_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(connection_color_ != nullptr);
      connection_color_->Clear();
    }
    visualize_landmark_depth_ = true;
    thickness_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AnnotationsToRenderDataCalculatorOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated int32 landmark_connections = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ptr -= 1;
          do {
            ptr += 1;
            _internal_add_landmark_connections(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<8>(ptr));
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_landmark_connections(), ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.Color landmark_color = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_landmark_color(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.Color connection_color = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_connection_color(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double thickness = 4 [default = 1];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_thickness(&has_bits);
          thickness_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional bool visualize_landmark_depth = 5 [default = true];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_visualize_landmark_depth(&has_bits);
          visualize_landmark_depth_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AnnotationsToRenderDataCalculatorOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 landmark_connections = 1;
  for (int i = 0, n = this->_internal_landmark_connections_size(); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_landmark_connections(i), target);
  }

  cached_has_bits = _has_bits_[0];
  // optional .mediapipe.Color landmark_color = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::landmark_color(this), target, stream);
  }

  // optional .mediapipe.Color connection_color = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::connection_color(this), target, stream);
  }

  // optional double thickness = 4 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_thickness(), target);
  }

  // optional bool visualize_landmark_depth = 5 [default = true];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_visualize_landmark_depth(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  return target;
}

size_t AnnotationsToRenderDataCalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 landmark_connections = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->landmark_connections_);
    total_size += 1 *
                  ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_landmark_connections_size());
    total_size += data_size;
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .mediapipe.Color landmark_color = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *landmark_color_);
    }

    // optional .mediapipe.Color connection_color = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *connection_color_);
    }

    // optional bool visualize_landmark_depth = 5 [default = true];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 1;
    }

    // optional double thickness = 4 [default = 1];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AnnotationsToRenderDataCalculatorOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const AnnotationsToRenderDataCalculatorOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AnnotationsToRenderDataCalculatorOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.AnnotationsToRenderDataCalculatorOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.AnnotationsToRenderDataCalculatorOptions)
    MergeFrom(*source);
  }
}

void AnnotationsToRenderDataCalculatorOptions::MergeFrom(const AnnotationsToRenderDataCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  landmark_connections_.MergeFrom(from.landmark_connections_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_landmark_color()->::mediapipe::Color::MergeFrom(from._internal_landmark_color());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_connection_color()->::mediapipe::Color::MergeFrom(from._internal_connection_color());
    }
    if (cached_has_bits & 0x00000004u) {
      visualize_landmark_depth_ = from.visualize_landmark_depth_;
    }
    if (cached_has_bits & 0x00000008u) {
      thickness_ = from.thickness_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void AnnotationsToRenderDataCalculatorOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AnnotationsToRenderDataCalculatorOptions::CopyFrom(const AnnotationsToRenderDataCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.AnnotationsToRenderDataCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AnnotationsToRenderDataCalculatorOptions::IsInitialized() const {
  return true;
}

void AnnotationsToRenderDataCalculatorOptions::InternalSwap(AnnotationsToRenderDataCalculatorOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  landmark_connections_.InternalSwap(&other->landmark_connections_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AnnotationsToRenderDataCalculatorOptions, connection_color_)
      + sizeof(AnnotationsToRenderDataCalculatorOptions::connection_color_)
      - PROTOBUF_FIELD_OFFSET(AnnotationsToRenderDataCalculatorOptions, landmark_color_)>(
          reinterpret_cast<char*>(&landmark_color_),
          reinterpret_cast<char*>(&other->landmark_color_));
  swap(visualize_landmark_depth_, other->visualize_landmark_depth_);
  swap(thickness_, other->thickness_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AnnotationsToRenderDataCalculatorOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_getter, &descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto_once,
      file_level_metadata_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fannotations_5fto_5frender_5fdata_5fcalculator_2eproto[0]);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AnnotationsToRenderDataCalculatorOptions::kExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::AnnotationsToRenderDataCalculatorOptions >, 11, false >
  AnnotationsToRenderDataCalculatorOptions::ext(kExtFieldNumber, ::mediapipe::AnnotationsToRenderDataCalculatorOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::AnnotationsToRenderDataCalculatorOptions* Arena::CreateMaybeMessage< ::mediapipe::AnnotationsToRenderDataCalculatorOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::AnnotationsToRenderDataCalculatorOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <x/google/protobuf/port_undef.inc>
