// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/graphs/object_detection_3d/calculators/model_matrix.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto

#include <limits>
#include <string>

#include <x/google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <x/google/protobuf/port_undef.inc>
#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/arena.h>
#include <x/google/protobuf/arenastring.h>
#include <x/google/protobuf/generated_message_table_driven.h>
#include <x/google/protobuf/generated_message_util.h>
#include <x/google/protobuf/metadata_lite.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/message.h>
#include <x/google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <x/google/protobuf/extension_set.h>  // IWYU pragma: export
#include <x/google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto;
namespace mediapipe {
class TimedModelMatrixProto;
struct TimedModelMatrixProtoDefaultTypeInternal;
extern TimedModelMatrixProtoDefaultTypeInternal _TimedModelMatrixProto_default_instance_;
class TimedModelMatrixProtoList;
struct TimedModelMatrixProtoListDefaultTypeInternal;
extern TimedModelMatrixProtoListDefaultTypeInternal _TimedModelMatrixProtoList_default_instance_;
class TimedVectorProto;
struct TimedVectorProtoDefaultTypeInternal;
extern TimedVectorProtoDefaultTypeInternal _TimedVectorProto_default_instance_;
class TimedVectorProtoList;
struct TimedVectorProtoListDefaultTypeInternal;
extern TimedVectorProtoListDefaultTypeInternal _TimedVectorProtoList_default_instance_;
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> ::mediapipe::TimedModelMatrixProto* Arena::CreateMaybeMessage<::mediapipe::TimedModelMatrixProto>(Arena*);
template<> ::mediapipe::TimedModelMatrixProtoList* Arena::CreateMaybeMessage<::mediapipe::TimedModelMatrixProtoList>(Arena*);
template<> ::mediapipe::TimedVectorProto* Arena::CreateMaybeMessage<::mediapipe::TimedVectorProto>(Arena*);
template<> ::mediapipe::TimedVectorProtoList* Arena::CreateMaybeMessage<::mediapipe::TimedVectorProtoList>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace mediapipe {

// ===================================================================

class TimedModelMatrixProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.TimedModelMatrixProto) */ {
 public:
  inline TimedModelMatrixProto() : TimedModelMatrixProto(nullptr) {}
  ~TimedModelMatrixProto() override;
  explicit constexpr TimedModelMatrixProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TimedModelMatrixProto(const TimedModelMatrixProto& from);
  TimedModelMatrixProto(TimedModelMatrixProto&& from) noexcept
    : TimedModelMatrixProto() {
    *this = ::std::move(from);
  }

  inline TimedModelMatrixProto& operator=(const TimedModelMatrixProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimedModelMatrixProto& operator=(TimedModelMatrixProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimedModelMatrixProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimedModelMatrixProto* internal_default_instance() {
    return reinterpret_cast<const TimedModelMatrixProto*>(
               &_TimedModelMatrixProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TimedModelMatrixProto& a, TimedModelMatrixProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TimedModelMatrixProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimedModelMatrixProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimedModelMatrixProto* New() const final {
    return CreateMaybeMessage<TimedModelMatrixProto>(nullptr);
  }

  TimedModelMatrixProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimedModelMatrixProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimedModelMatrixProto& from);
  void MergeFrom(const TimedModelMatrixProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimedModelMatrixProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.TimedModelMatrixProto";
  }
  protected:
  explicit TimedModelMatrixProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMatrixEntriesFieldNumber = 1,
    kTimeMsecFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // repeated float matrix_entries = 1 [packed = true];
  int matrix_entries_size() const;
  private:
  int _internal_matrix_entries_size() const;
  public:
  void clear_matrix_entries();
  private:
  float _internal_matrix_entries(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_matrix_entries() const;
  void _internal_add_matrix_entries(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_matrix_entries();
  public:
  float matrix_entries(int index) const;
  void set_matrix_entries(int index, float value);
  void add_matrix_entries(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      matrix_entries() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_matrix_entries();

  // optional int64 time_msec = 2 [default = 0];
  bool has_time_msec() const;
  private:
  bool _internal_has_time_msec() const;
  public:
  void clear_time_msec();
  ::PROTOBUF_NAMESPACE_ID::int64 time_msec() const;
  void set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_time_msec() const;
  void _internal_set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 id = 3 [default = -1];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mediapipe.TimedModelMatrixProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > matrix_entries_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_msec_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  friend struct ::TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto;
};
// -------------------------------------------------------------------

class TimedModelMatrixProtoList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.TimedModelMatrixProtoList) */ {
 public:
  inline TimedModelMatrixProtoList() : TimedModelMatrixProtoList(nullptr) {}
  ~TimedModelMatrixProtoList() override;
  explicit constexpr TimedModelMatrixProtoList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TimedModelMatrixProtoList(const TimedModelMatrixProtoList& from);
  TimedModelMatrixProtoList(TimedModelMatrixProtoList&& from) noexcept
    : TimedModelMatrixProtoList() {
    *this = ::std::move(from);
  }

  inline TimedModelMatrixProtoList& operator=(const TimedModelMatrixProtoList& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimedModelMatrixProtoList& operator=(TimedModelMatrixProtoList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimedModelMatrixProtoList& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimedModelMatrixProtoList* internal_default_instance() {
    return reinterpret_cast<const TimedModelMatrixProtoList*>(
               &_TimedModelMatrixProtoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TimedModelMatrixProtoList& a, TimedModelMatrixProtoList& b) {
    a.Swap(&b);
  }
  inline void Swap(TimedModelMatrixProtoList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimedModelMatrixProtoList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimedModelMatrixProtoList* New() const final {
    return CreateMaybeMessage<TimedModelMatrixProtoList>(nullptr);
  }

  TimedModelMatrixProtoList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimedModelMatrixProtoList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimedModelMatrixProtoList& from);
  void MergeFrom(const TimedModelMatrixProtoList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimedModelMatrixProtoList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.TimedModelMatrixProtoList";
  }
  protected:
  explicit TimedModelMatrixProtoList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelMatrixFieldNumber = 1,
  };
  // repeated .mediapipe.TimedModelMatrixProto model_matrix = 1;
  int model_matrix_size() const;
  private:
  int _internal_model_matrix_size() const;
  public:
  void clear_model_matrix();
  ::mediapipe::TimedModelMatrixProto* mutable_model_matrix(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedModelMatrixProto >*
      mutable_model_matrix();
  private:
  const ::mediapipe::TimedModelMatrixProto& _internal_model_matrix(int index) const;
  ::mediapipe::TimedModelMatrixProto* _internal_add_model_matrix();
  public:
  const ::mediapipe::TimedModelMatrixProto& model_matrix(int index) const;
  ::mediapipe::TimedModelMatrixProto* add_model_matrix();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedModelMatrixProto >&
      model_matrix() const;

  // @@protoc_insertion_point(class_scope:mediapipe.TimedModelMatrixProtoList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedModelMatrixProto > model_matrix_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto;
};
// -------------------------------------------------------------------

class TimedVectorProto PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.TimedVectorProto) */ {
 public:
  inline TimedVectorProto() : TimedVectorProto(nullptr) {}
  ~TimedVectorProto() override;
  explicit constexpr TimedVectorProto(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TimedVectorProto(const TimedVectorProto& from);
  TimedVectorProto(TimedVectorProto&& from) noexcept
    : TimedVectorProto() {
    *this = ::std::move(from);
  }

  inline TimedVectorProto& operator=(const TimedVectorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimedVectorProto& operator=(TimedVectorProto&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimedVectorProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimedVectorProto* internal_default_instance() {
    return reinterpret_cast<const TimedVectorProto*>(
               &_TimedVectorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(TimedVectorProto& a, TimedVectorProto& b) {
    a.Swap(&b);
  }
  inline void Swap(TimedVectorProto* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimedVectorProto* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimedVectorProto* New() const final {
    return CreateMaybeMessage<TimedVectorProto>(nullptr);
  }

  TimedVectorProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimedVectorProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimedVectorProto& from);
  void MergeFrom(const TimedVectorProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimedVectorProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.TimedVectorProto";
  }
  protected:
  explicit TimedVectorProto(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVectorEntriesFieldNumber = 1,
    kTimeMsecFieldNumber = 2,
    kIdFieldNumber = 3,
  };
  // repeated float vector_entries = 1 [packed = true];
  int vector_entries_size() const;
  private:
  int _internal_vector_entries_size() const;
  public:
  void clear_vector_entries();
  private:
  float _internal_vector_entries(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vector_entries() const;
  void _internal_add_vector_entries(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vector_entries();
  public:
  float vector_entries(int index) const;
  void set_vector_entries(int index, float value);
  void add_vector_entries(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vector_entries() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vector_entries();

  // optional int64 time_msec = 2 [default = 0];
  bool has_time_msec() const;
  private:
  bool _internal_has_time_msec() const;
  public:
  void clear_time_msec();
  ::PROTOBUF_NAMESPACE_ID::int64 time_msec() const;
  void set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_time_msec() const;
  void _internal_set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // optional int32 id = 3 [default = -1];
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:mediapipe.TimedVectorProto)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vector_entries_;
  ::PROTOBUF_NAMESPACE_ID::int64 time_msec_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  friend struct ::TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto;
};
// -------------------------------------------------------------------

class TimedVectorProtoList PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:mediapipe.TimedVectorProtoList) */ {
 public:
  inline TimedVectorProtoList() : TimedVectorProtoList(nullptr) {}
  ~TimedVectorProtoList() override;
  explicit constexpr TimedVectorProtoList(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  TimedVectorProtoList(const TimedVectorProtoList& from);
  TimedVectorProtoList(TimedVectorProtoList&& from) noexcept
    : TimedVectorProtoList() {
    *this = ::std::move(from);
  }

  inline TimedVectorProtoList& operator=(const TimedVectorProtoList& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimedVectorProtoList& operator=(TimedVectorProtoList&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimedVectorProtoList& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimedVectorProtoList* internal_default_instance() {
    return reinterpret_cast<const TimedVectorProtoList*>(
               &_TimedVectorProtoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(TimedVectorProtoList& a, TimedVectorProtoList& b) {
    a.Swap(&b);
  }
  inline void Swap(TimedVectorProtoList* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimedVectorProtoList* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TimedVectorProtoList* New() const final {
    return CreateMaybeMessage<TimedVectorProtoList>(nullptr);
  }

  TimedVectorProtoList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TimedVectorProtoList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TimedVectorProtoList& from);
  void MergeFrom(const TimedVectorProtoList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TimedVectorProtoList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "mediapipe.TimedVectorProtoList";
  }
  protected:
  explicit TimedVectorProtoList(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVectorListFieldNumber = 1,
  };
  // repeated .mediapipe.TimedVectorProto vector_list = 1;
  int vector_list_size() const;
  private:
  int _internal_vector_list_size() const;
  public:
  void clear_vector_list();
  ::mediapipe::TimedVectorProto* mutable_vector_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedVectorProto >*
      mutable_vector_list();
  private:
  const ::mediapipe::TimedVectorProto& _internal_vector_list(int index) const;
  ::mediapipe::TimedVectorProto* _internal_add_vector_list();
  public:
  const ::mediapipe::TimedVectorProto& vector_list(int index) const;
  ::mediapipe::TimedVectorProto* add_vector_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedVectorProto >&
      vector_list() const;

  // @@protoc_insertion_point(class_scope:mediapipe.TimedVectorProtoList)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedVectorProto > vector_list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TimedModelMatrixProto

// repeated float matrix_entries = 1 [packed = true];
inline int TimedModelMatrixProto::_internal_matrix_entries_size() const {
  return matrix_entries_.size();
}
inline int TimedModelMatrixProto::matrix_entries_size() const {
  return _internal_matrix_entries_size();
}
inline void TimedModelMatrixProto::clear_matrix_entries() {
  matrix_entries_.Clear();
}
inline float TimedModelMatrixProto::_internal_matrix_entries(int index) const {
  return matrix_entries_.Get(index);
}
inline float TimedModelMatrixProto::matrix_entries(int index) const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedModelMatrixProto.matrix_entries)
  return _internal_matrix_entries(index);
}
inline void TimedModelMatrixProto::set_matrix_entries(int index, float value) {
  matrix_entries_.Set(index, value);
  // @@protoc_insertion_point(field_set:mediapipe.TimedModelMatrixProto.matrix_entries)
}
inline void TimedModelMatrixProto::_internal_add_matrix_entries(float value) {
  matrix_entries_.Add(value);
}
inline void TimedModelMatrixProto::add_matrix_entries(float value) {
  _internal_add_matrix_entries(value);
  // @@protoc_insertion_point(field_add:mediapipe.TimedModelMatrixProto.matrix_entries)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TimedModelMatrixProto::_internal_matrix_entries() const {
  return matrix_entries_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TimedModelMatrixProto::matrix_entries() const {
  // @@protoc_insertion_point(field_list:mediapipe.TimedModelMatrixProto.matrix_entries)
  return _internal_matrix_entries();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TimedModelMatrixProto::_internal_mutable_matrix_entries() {
  return &matrix_entries_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TimedModelMatrixProto::mutable_matrix_entries() {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.TimedModelMatrixProto.matrix_entries)
  return _internal_mutable_matrix_entries();
}

// optional int64 time_msec = 2 [default = 0];
inline bool TimedModelMatrixProto::_internal_has_time_msec() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TimedModelMatrixProto::has_time_msec() const {
  return _internal_has_time_msec();
}
inline void TimedModelMatrixProto::clear_time_msec() {
  time_msec_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TimedModelMatrixProto::_internal_time_msec() const {
  return time_msec_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TimedModelMatrixProto::time_msec() const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedModelMatrixProto.time_msec)
  return _internal_time_msec();
}
inline void TimedModelMatrixProto::_internal_set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_msec_ = value;
}
inline void TimedModelMatrixProto::set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_time_msec(value);
  // @@protoc_insertion_point(field_set:mediapipe.TimedModelMatrixProto.time_msec)
}

// optional int32 id = 3 [default = -1];
inline bool TimedModelMatrixProto::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TimedModelMatrixProto::has_id() const {
  return _internal_has_id();
}
inline void TimedModelMatrixProto::clear_id() {
  id_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TimedModelMatrixProto::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TimedModelMatrixProto::id() const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedModelMatrixProto.id)
  return _internal_id();
}
inline void TimedModelMatrixProto::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void TimedModelMatrixProto::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mediapipe.TimedModelMatrixProto.id)
}

// -------------------------------------------------------------------

// TimedModelMatrixProtoList

// repeated .mediapipe.TimedModelMatrixProto model_matrix = 1;
inline int TimedModelMatrixProtoList::_internal_model_matrix_size() const {
  return model_matrix_.size();
}
inline int TimedModelMatrixProtoList::model_matrix_size() const {
  return _internal_model_matrix_size();
}
inline void TimedModelMatrixProtoList::clear_model_matrix() {
  model_matrix_.Clear();
}
inline ::mediapipe::TimedModelMatrixProto* TimedModelMatrixProtoList::mutable_model_matrix(int index) {
  // @@protoc_insertion_point(field_mutable:mediapipe.TimedModelMatrixProtoList.model_matrix)
  return model_matrix_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedModelMatrixProto >*
TimedModelMatrixProtoList::mutable_model_matrix() {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.TimedModelMatrixProtoList.model_matrix)
  return &model_matrix_;
}
inline const ::mediapipe::TimedModelMatrixProto& TimedModelMatrixProtoList::_internal_model_matrix(int index) const {
  return model_matrix_.Get(index);
}
inline const ::mediapipe::TimedModelMatrixProto& TimedModelMatrixProtoList::model_matrix(int index) const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedModelMatrixProtoList.model_matrix)
  return _internal_model_matrix(index);
}
inline ::mediapipe::TimedModelMatrixProto* TimedModelMatrixProtoList::_internal_add_model_matrix() {
  return model_matrix_.Add();
}
inline ::mediapipe::TimedModelMatrixProto* TimedModelMatrixProtoList::add_model_matrix() {
  // @@protoc_insertion_point(field_add:mediapipe.TimedModelMatrixProtoList.model_matrix)
  return _internal_add_model_matrix();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedModelMatrixProto >&
TimedModelMatrixProtoList::model_matrix() const {
  // @@protoc_insertion_point(field_list:mediapipe.TimedModelMatrixProtoList.model_matrix)
  return model_matrix_;
}

// -------------------------------------------------------------------

// TimedVectorProto

// repeated float vector_entries = 1 [packed = true];
inline int TimedVectorProto::_internal_vector_entries_size() const {
  return vector_entries_.size();
}
inline int TimedVectorProto::vector_entries_size() const {
  return _internal_vector_entries_size();
}
inline void TimedVectorProto::clear_vector_entries() {
  vector_entries_.Clear();
}
inline float TimedVectorProto::_internal_vector_entries(int index) const {
  return vector_entries_.Get(index);
}
inline float TimedVectorProto::vector_entries(int index) const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedVectorProto.vector_entries)
  return _internal_vector_entries(index);
}
inline void TimedVectorProto::set_vector_entries(int index, float value) {
  vector_entries_.Set(index, value);
  // @@protoc_insertion_point(field_set:mediapipe.TimedVectorProto.vector_entries)
}
inline void TimedVectorProto::_internal_add_vector_entries(float value) {
  vector_entries_.Add(value);
}
inline void TimedVectorProto::add_vector_entries(float value) {
  _internal_add_vector_entries(value);
  // @@protoc_insertion_point(field_add:mediapipe.TimedVectorProto.vector_entries)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TimedVectorProto::_internal_vector_entries() const {
  return vector_entries_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
TimedVectorProto::vector_entries() const {
  // @@protoc_insertion_point(field_list:mediapipe.TimedVectorProto.vector_entries)
  return _internal_vector_entries();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TimedVectorProto::_internal_mutable_vector_entries() {
  return &vector_entries_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
TimedVectorProto::mutable_vector_entries() {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.TimedVectorProto.vector_entries)
  return _internal_mutable_vector_entries();
}

// optional int64 time_msec = 2 [default = 0];
inline bool TimedVectorProto::_internal_has_time_msec() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TimedVectorProto::has_time_msec() const {
  return _internal_has_time_msec();
}
inline void TimedVectorProto::clear_time_msec() {
  time_msec_ = PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TimedVectorProto::_internal_time_msec() const {
  return time_msec_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 TimedVectorProto::time_msec() const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedVectorProto.time_msec)
  return _internal_time_msec();
}
inline void TimedVectorProto::_internal_set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  time_msec_ = value;
}
inline void TimedVectorProto::set_time_msec(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_time_msec(value);
  // @@protoc_insertion_point(field_set:mediapipe.TimedVectorProto.time_msec)
}

// optional int32 id = 3 [default = -1];
inline bool TimedVectorProto::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TimedVectorProto::has_id() const {
  return _internal_has_id();
}
inline void TimedVectorProto::clear_id() {
  id_ = -1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TimedVectorProto::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TimedVectorProto::id() const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedVectorProto.id)
  return _internal_id();
}
inline void TimedVectorProto::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void TimedVectorProto::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:mediapipe.TimedVectorProto.id)
}

// -------------------------------------------------------------------

// TimedVectorProtoList

// repeated .mediapipe.TimedVectorProto vector_list = 1;
inline int TimedVectorProtoList::_internal_vector_list_size() const {
  return vector_list_.size();
}
inline int TimedVectorProtoList::vector_list_size() const {
  return _internal_vector_list_size();
}
inline void TimedVectorProtoList::clear_vector_list() {
  vector_list_.Clear();
}
inline ::mediapipe::TimedVectorProto* TimedVectorProtoList::mutable_vector_list(int index) {
  // @@protoc_insertion_point(field_mutable:mediapipe.TimedVectorProtoList.vector_list)
  return vector_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedVectorProto >*
TimedVectorProtoList::mutable_vector_list() {
  // @@protoc_insertion_point(field_mutable_list:mediapipe.TimedVectorProtoList.vector_list)
  return &vector_list_;
}
inline const ::mediapipe::TimedVectorProto& TimedVectorProtoList::_internal_vector_list(int index) const {
  return vector_list_.Get(index);
}
inline const ::mediapipe::TimedVectorProto& TimedVectorProtoList::vector_list(int index) const {
  // @@protoc_insertion_point(field_get:mediapipe.TimedVectorProtoList.vector_list)
  return _internal_vector_list(index);
}
inline ::mediapipe::TimedVectorProto* TimedVectorProtoList::_internal_add_vector_list() {
  return vector_list_.Add();
}
inline ::mediapipe::TimedVectorProto* TimedVectorProtoList::add_vector_list() {
  // @@protoc_insertion_point(field_add:mediapipe.TimedVectorProtoList.vector_list)
  return _internal_add_vector_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::mediapipe::TimedVectorProto >&
TimedVectorProtoList::vector_list() const {
  // @@protoc_insertion_point(field_list:mediapipe.TimedVectorProtoList.vector_list)
  return vector_list_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace mediapipe

// @@protoc_insertion_point(global_scope)

#include <x/google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_mediapipe_2fgraphs_2fobject_5fdetection_5f3d_2fcalculators_2fmodel_5fmatrix_2eproto
