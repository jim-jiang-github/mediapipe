// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/modules/objectron/calculators/frame_annotation_tracker_calculator.proto

#include "mediapipe/modules/objectron/calculators/frame_annotation_tracker_calculator.pb.h"

#include <algorithm>

#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/extension_set.h>
#include <x/google/protobuf/wire_format_lite.h>
#include <x/google/protobuf/descriptor.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/reflection_ops.h>
#include <x/google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mediapipe {
constexpr FrameAnnotationTrackerCalculatorOptions::FrameAnnotationTrackerCalculatorOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : img_width_(0)
  , img_height_(0)
  , iou_threshold_(0.5f){}
struct FrameAnnotationTrackerCalculatorOptionsDefaultTypeInternal {
  constexpr FrameAnnotationTrackerCalculatorOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~FrameAnnotationTrackerCalculatorOptionsDefaultTypeInternal() {}
  union {
    FrameAnnotationTrackerCalculatorOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT FrameAnnotationTrackerCalculatorOptionsDefaultTypeInternal _FrameAnnotationTrackerCalculatorOptions_default_instance_;
}  // namespace mediapipe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::FrameAnnotationTrackerCalculatorOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::FrameAnnotationTrackerCalculatorOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::FrameAnnotationTrackerCalculatorOptions, iou_threshold_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::FrameAnnotationTrackerCalculatorOptions, img_width_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::FrameAnnotationTrackerCalculatorOptions, img_height_),
  2,
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::mediapipe::FrameAnnotationTrackerCalculatorOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_FrameAnnotationTrackerCalculatorOptions_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nQmediapipe/modules/objectron/calculator"
  "s/frame_annotation_tracker_calculator.pr"
  "oto\022\tmediapipe\032$mediapipe/framework/calc"
  "ulator.proto\"\317\001\n\'FrameAnnotationTrackerC"
  "alculatorOptions\022\032\n\riou_threshold\030\001 \001(\002:"
  "\0030.5\022\021\n\timg_width\030\002 \001(\002\022\022\n\nimg_height\030\003 "
  "\001(\0022a\n\003ext\022\034.mediapipe.CalculatorOptions"
  "\030\365\200\363\212\001 \001(\01322.mediapipe.FrameAnnotationTr"
  "ackerCalculatorOptions"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_deps[1] = {
  &::descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto = {
  false, false, 342, descriptor_table_protodef_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto, "mediapipe/modules/objectron/calculators/frame_annotation_tracker_calculator.proto", 
  &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_once, descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto::offsets,
  file_level_metadata_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto, file_level_enum_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto, file_level_service_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_getter() {
  return &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto(&descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto);
namespace mediapipe {

// ===================================================================

class FrameAnnotationTrackerCalculatorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<FrameAnnotationTrackerCalculatorOptions>()._has_bits_);
  static void set_has_iou_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_img_width(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_img_height(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

FrameAnnotationTrackerCalculatorOptions::FrameAnnotationTrackerCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.FrameAnnotationTrackerCalculatorOptions)
}
FrameAnnotationTrackerCalculatorOptions::FrameAnnotationTrackerCalculatorOptions(const FrameAnnotationTrackerCalculatorOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&img_width_, &from.img_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&iou_threshold_) -
    reinterpret_cast<char*>(&img_width_)) + sizeof(iou_threshold_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.FrameAnnotationTrackerCalculatorOptions)
}

void FrameAnnotationTrackerCalculatorOptions::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&img_width_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&img_height_) -
    reinterpret_cast<char*>(&img_width_)) + sizeof(img_height_));
iou_threshold_ = 0.5f;
}

FrameAnnotationTrackerCalculatorOptions::~FrameAnnotationTrackerCalculatorOptions() {
  // @@protoc_insertion_point(destructor:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrameAnnotationTrackerCalculatorOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrameAnnotationTrackerCalculatorOptions::ArenaDtor(void* object) {
  FrameAnnotationTrackerCalculatorOptions* _this = reinterpret_cast< FrameAnnotationTrackerCalculatorOptions* >(object);
  (void)_this;
}
void FrameAnnotationTrackerCalculatorOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrameAnnotationTrackerCalculatorOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void FrameAnnotationTrackerCalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&img_width_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&img_height_) -
        reinterpret_cast<char*>(&img_width_)) + sizeof(img_height_));
    iou_threshold_ = 0.5f;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameAnnotationTrackerCalculatorOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional float iou_threshold = 1 [default = 0.5];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          _Internal::set_has_iou_threshold(&has_bits);
          iou_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float img_width = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21)) {
          _Internal::set_has_img_width(&has_bits);
          img_width_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float img_height = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _Internal::set_has_img_height(&has_bits);
          img_height_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrameAnnotationTrackerCalculatorOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional float iou_threshold = 1 [default = 0.5];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_iou_threshold(), target);
  }

  // optional float img_width = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(2, this->_internal_img_width(), target);
  }

  // optional float img_height = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_img_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  return target;
}

size_t FrameAnnotationTrackerCalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional float img_width = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 4;
    }

    // optional float img_height = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 4;
    }

    // optional float iou_threshold = 1 [default = 0.5];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameAnnotationTrackerCalculatorOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameAnnotationTrackerCalculatorOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrameAnnotationTrackerCalculatorOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.FrameAnnotationTrackerCalculatorOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.FrameAnnotationTrackerCalculatorOptions)
    MergeFrom(*source);
  }
}

void FrameAnnotationTrackerCalculatorOptions::MergeFrom(const FrameAnnotationTrackerCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      img_width_ = from.img_width_;
    }
    if (cached_has_bits & 0x00000002u) {
      img_height_ = from.img_height_;
    }
    if (cached_has_bits & 0x00000004u) {
      iou_threshold_ = from.iou_threshold_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FrameAnnotationTrackerCalculatorOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameAnnotationTrackerCalculatorOptions::CopyFrom(const FrameAnnotationTrackerCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.FrameAnnotationTrackerCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameAnnotationTrackerCalculatorOptions::IsInitialized() const {
  return true;
}

void FrameAnnotationTrackerCalculatorOptions::InternalSwap(FrameAnnotationTrackerCalculatorOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FrameAnnotationTrackerCalculatorOptions, img_height_)
      + sizeof(FrameAnnotationTrackerCalculatorOptions::img_height_)
      - PROTOBUF_FIELD_OFFSET(FrameAnnotationTrackerCalculatorOptions, img_width_)>(
          reinterpret_cast<char*>(&img_width_),
          reinterpret_cast<char*>(&other->img_width_));
  swap(iou_threshold_, other->iou_threshold_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameAnnotationTrackerCalculatorOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_getter, &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto_once,
      file_level_metadata_mediapipe_2fmodules_2fobjectron_2fcalculators_2fframe_5fannotation_5ftracker_5fcalculator_2eproto[0]);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FrameAnnotationTrackerCalculatorOptions::kExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::FrameAnnotationTrackerCalculatorOptions >, 11, false >
  FrameAnnotationTrackerCalculatorOptions::ext(kExtFieldNumber, ::mediapipe::FrameAnnotationTrackerCalculatorOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::FrameAnnotationTrackerCalculatorOptions* Arena::CreateMaybeMessage< ::mediapipe::FrameAnnotationTrackerCalculatorOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::FrameAnnotationTrackerCalculatorOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <x/google/protobuf/port_undef.inc>
