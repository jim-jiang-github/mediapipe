// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mediapipe/modules/objectron/calculators/tflite_tensors_to_objects_calculator.proto

#include "mediapipe/modules/objectron/calculators/tflite_tensors_to_objects_calculator.pb.h"

#include <algorithm>

#include <x/google/protobuf/io/coded_stream.h>
#include <x/google/protobuf/extension_set.h>
#include <x/google/protobuf/wire_format_lite.h>
#include <x/google/protobuf/descriptor.h>
#include <x/google/protobuf/generated_message_reflection.h>
#include <x/google/protobuf/reflection_ops.h>
#include <x/google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <x/google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace mediapipe {
constexpr TfLiteTensorsToObjectsCalculatorOptions::TfLiteTensorsToObjectsCalculatorOptions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : decoder_config_(nullptr)
  , num_classes_(0)
  , num_keypoints_(0)
  , normalized_principal_point_x_(0)
  , normalized_principal_point_y_(0)
  , normalized_focal_y_(1)
  , num_values_per_keypoint_(2)
  , normalized_focal_x_(1){}
struct TfLiteTensorsToObjectsCalculatorOptionsDefaultTypeInternal {
  constexpr TfLiteTensorsToObjectsCalculatorOptionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~TfLiteTensorsToObjectsCalculatorOptionsDefaultTypeInternal() {}
  union {
    TfLiteTensorsToObjectsCalculatorOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT TfLiteTensorsToObjectsCalculatorOptionsDefaultTypeInternal _TfLiteTensorsToObjectsCalculatorOptions_default_instance_;
}  // namespace mediapipe
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, num_classes_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, num_keypoints_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, num_values_per_keypoint_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, decoder_config_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, normalized_focal_x_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, normalized_focal_y_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, normalized_principal_point_x_),
  PROTOBUF_FIELD_OFFSET(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions, normalized_principal_point_y_),
  1,
  2,
  6,
  0,
  7,
  5,
  3,
  4,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::mediapipe::TfLiteTensorsToObjectsCalculatorOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::mediapipe::_TfLiteTensorsToObjectsCalculatorOptions_default_instance_),
};

const char descriptor_table_protodef_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nRmediapipe/modules/objectron/calculator"
  "s/tflite_tensors_to_objects_calculator.p"
  "roto\022\tmediapipe\032$mediapipe/framework/cal"
  "culator.proto\032Cmediapipe/modules/objectr"
  "on/calculators/belief_decoder_config.pro"
  "to\"\243\003\n\'TfLiteTensorsToObjectsCalculatorO"
  "ptions\022\023\n\013num_classes\030\001 \001(\005\022\025\n\rnum_keypo"
  "ints\030\002 \001(\005\022\"\n\027num_values_per_keypoint\030\003 "
  "\001(\005:\0012\0226\n\016decoder_config\030\004 \001(\0132\036.mediapi"
  "pe.BeliefDecoderConfig\022\035\n\022normalized_foc"
  "al_x\030\005 \001(\002:\0011\022\035\n\022normalized_focal_y\030\006 \001("
  "\002:\0011\022\'\n\034normalized_principal_point_x\030\007 \001"
  "(\002:\0010\022\'\n\034normalized_principal_point_y\030\010 "
  "\001(\002:\00102`\n\003ext\022\034.mediapipe.CalculatorOpti"
  "ons\030\276\377\334} \001(\01322.mediapipe.TfLiteTensorsTo"
  "ObjectsCalculatorOptions"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_deps[2] = {
  &::descriptor_table_mediapipe_2fframework_2fcalculator_2eproto,
  &::descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2fbelief_5fdecoder_5fconfig_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto = {
  false, false, 624, descriptor_table_protodef_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto, "mediapipe/modules/objectron/calculators/tflite_tensors_to_objects_calculator.proto", 
  &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_once, descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto::offsets,
  file_level_metadata_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto, file_level_enum_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto, file_level_service_descriptors_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_getter() {
  return &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto(&descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto);
namespace mediapipe {

// ===================================================================

class TfLiteTensorsToObjectsCalculatorOptions::_Internal {
 public:
  using HasBits = decltype(std::declval<TfLiteTensorsToObjectsCalculatorOptions>()._has_bits_);
  static void set_has_num_classes(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_num_keypoints(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_num_values_per_keypoint(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::mediapipe::BeliefDecoderConfig& decoder_config(const TfLiteTensorsToObjectsCalculatorOptions* msg);
  static void set_has_decoder_config(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_normalized_focal_x(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_normalized_focal_y(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_normalized_principal_point_x(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_normalized_principal_point_y(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

const ::mediapipe::BeliefDecoderConfig&
TfLiteTensorsToObjectsCalculatorOptions::_Internal::decoder_config(const TfLiteTensorsToObjectsCalculatorOptions* msg) {
  return *msg->decoder_config_;
}
void TfLiteTensorsToObjectsCalculatorOptions::clear_decoder_config() {
  if (decoder_config_ != nullptr) decoder_config_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
TfLiteTensorsToObjectsCalculatorOptions::TfLiteTensorsToObjectsCalculatorOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
}
TfLiteTensorsToObjectsCalculatorOptions::TfLiteTensorsToObjectsCalculatorOptions(const TfLiteTensorsToObjectsCalculatorOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_decoder_config()) {
    decoder_config_ = new ::mediapipe::BeliefDecoderConfig(*from.decoder_config_);
  } else {
    decoder_config_ = nullptr;
  }
  ::memcpy(&num_classes_, &from.num_classes_,
    static_cast<size_t>(reinterpret_cast<char*>(&normalized_focal_x_) -
    reinterpret_cast<char*>(&num_classes_)) + sizeof(normalized_focal_x_));
  // @@protoc_insertion_point(copy_constructor:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
}

void TfLiteTensorsToObjectsCalculatorOptions::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&decoder_config_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&normalized_principal_point_y_) -
    reinterpret_cast<char*>(&decoder_config_)) + sizeof(normalized_principal_point_y_));
normalized_focal_y_ = 1;
num_values_per_keypoint_ = 2;
normalized_focal_x_ = 1;
}

TfLiteTensorsToObjectsCalculatorOptions::~TfLiteTensorsToObjectsCalculatorOptions() {
  // @@protoc_insertion_point(destructor:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TfLiteTensorsToObjectsCalculatorOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete decoder_config_;
}

void TfLiteTensorsToObjectsCalculatorOptions::ArenaDtor(void* object) {
  TfLiteTensorsToObjectsCalculatorOptions* _this = reinterpret_cast< TfLiteTensorsToObjectsCalculatorOptions* >(object);
  (void)_this;
}
void TfLiteTensorsToObjectsCalculatorOptions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TfLiteTensorsToObjectsCalculatorOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void TfLiteTensorsToObjectsCalculatorOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(decoder_config_ != nullptr);
    decoder_config_->Clear();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&num_classes_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&normalized_principal_point_y_) -
        reinterpret_cast<char*>(&num_classes_)) + sizeof(normalized_principal_point_y_));
    normalized_focal_y_ = 1;
    num_values_per_keypoint_ = 2;
    normalized_focal_x_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TfLiteTensorsToObjectsCalculatorOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional int32 num_classes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_num_classes(&has_bits);
          num_classes_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_keypoints = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_num_keypoints(&has_bits);
          num_keypoints_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 num_values_per_keypoint = 3 [default = 2];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_num_values_per_keypoint(&has_bits);
          num_values_per_keypoint_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .mediapipe.BeliefDecoderConfig decoder_config = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_decoder_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float normalized_focal_x = 5 [default = 1];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 45)) {
          _Internal::set_has_normalized_focal_x(&has_bits);
          normalized_focal_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float normalized_focal_y = 6 [default = 1];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 53)) {
          _Internal::set_has_normalized_focal_y(&has_bits);
          normalized_focal_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float normalized_principal_point_x = 7 [default = 0];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          _Internal::set_has_normalized_principal_point_x(&has_bits);
          normalized_principal_point_x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float normalized_principal_point_y = 8 [default = 0];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_normalized_principal_point_y(&has_bits);
          normalized_principal_point_y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TfLiteTensorsToObjectsCalculatorOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 num_classes = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_num_classes(), target);
  }

  // optional int32 num_keypoints = 2;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_num_keypoints(), target);
  }

  // optional int32 num_values_per_keypoint = 3 [default = 2];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_num_values_per_keypoint(), target);
  }

  // optional .mediapipe.BeliefDecoderConfig decoder_config = 4;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::decoder_config(this), target, stream);
  }

  // optional float normalized_focal_x = 5 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(5, this->_internal_normalized_focal_x(), target);
  }

  // optional float normalized_focal_y = 6 [default = 1];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(6, this->_internal_normalized_focal_y(), target);
  }

  // optional float normalized_principal_point_x = 7 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_normalized_principal_point_x(), target);
  }

  // optional float normalized_principal_point_y = 8 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_normalized_principal_point_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  return target;
}

size_t TfLiteTensorsToObjectsCalculatorOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .mediapipe.BeliefDecoderConfig decoder_config = 4;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *decoder_config_);
    }

    // optional int32 num_classes = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_num_classes());
    }

    // optional int32 num_keypoints = 2;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_num_keypoints());
    }

    // optional float normalized_principal_point_x = 7 [default = 0];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 4;
    }

    // optional float normalized_principal_point_y = 8 [default = 0];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 4;
    }

    // optional float normalized_focal_y = 6 [default = 1];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 4;
    }

    // optional int32 num_values_per_keypoint = 3 [default = 2];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_num_values_per_keypoint());
    }

    // optional float normalized_focal_x = 5 [default = 1];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TfLiteTensorsToObjectsCalculatorOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const TfLiteTensorsToObjectsCalculatorOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TfLiteTensorsToObjectsCalculatorOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
    MergeFrom(*source);
  }
}

void TfLiteTensorsToObjectsCalculatorOptions::MergeFrom(const TfLiteTensorsToObjectsCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_decoder_config()->::mediapipe::BeliefDecoderConfig::MergeFrom(from._internal_decoder_config());
    }
    if (cached_has_bits & 0x00000002u) {
      num_classes_ = from.num_classes_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_keypoints_ = from.num_keypoints_;
    }
    if (cached_has_bits & 0x00000008u) {
      normalized_principal_point_x_ = from.normalized_principal_point_x_;
    }
    if (cached_has_bits & 0x00000010u) {
      normalized_principal_point_y_ = from.normalized_principal_point_y_;
    }
    if (cached_has_bits & 0x00000020u) {
      normalized_focal_y_ = from.normalized_focal_y_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_values_per_keypoint_ = from.num_values_per_keypoint_;
    }
    if (cached_has_bits & 0x00000080u) {
      normalized_focal_x_ = from.normalized_focal_x_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TfLiteTensorsToObjectsCalculatorOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TfLiteTensorsToObjectsCalculatorOptions::CopyFrom(const TfLiteTensorsToObjectsCalculatorOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mediapipe.TfLiteTensorsToObjectsCalculatorOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TfLiteTensorsToObjectsCalculatorOptions::IsInitialized() const {
  return true;
}

void TfLiteTensorsToObjectsCalculatorOptions::InternalSwap(TfLiteTensorsToObjectsCalculatorOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TfLiteTensorsToObjectsCalculatorOptions, normalized_principal_point_y_)
      + sizeof(TfLiteTensorsToObjectsCalculatorOptions::normalized_principal_point_y_)
      - PROTOBUF_FIELD_OFFSET(TfLiteTensorsToObjectsCalculatorOptions, decoder_config_)>(
          reinterpret_cast<char*>(&decoder_config_),
          reinterpret_cast<char*>(&other->decoder_config_));
  swap(normalized_focal_y_, other->normalized_focal_y_);
  swap(num_values_per_keypoint_, other->num_values_per_keypoint_);
  swap(normalized_focal_x_, other->normalized_focal_x_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TfLiteTensorsToObjectsCalculatorOptions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_getter, &descriptor_table_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto_once,
      file_level_metadata_mediapipe_2fmodules_2fobjectron_2fcalculators_2ftflite_5ftensors_5fto_5fobjects_5fcalculator_2eproto[0]);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TfLiteTensorsToObjectsCalculatorOptions::kExtFieldNumber;
#endif
PROTOBUF_ATTRIBUTE_INIT_PRIORITY ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::mediapipe::CalculatorOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::mediapipe::TfLiteTensorsToObjectsCalculatorOptions >, 11, false >
  TfLiteTensorsToObjectsCalculatorOptions::ext(kExtFieldNumber, ::mediapipe::TfLiteTensorsToObjectsCalculatorOptions::default_instance());

// @@protoc_insertion_point(namespace_scope)
}  // namespace mediapipe
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::mediapipe::TfLiteTensorsToObjectsCalculatorOptions* Arena::CreateMaybeMessage< ::mediapipe::TfLiteTensorsToObjectsCalculatorOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::mediapipe::TfLiteTensorsToObjectsCalculatorOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <x/google/protobuf/port_undef.inc>
